{"_id":"com.unity.2d.tilemap.extras","name":"com.unity.2d.tilemap.extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","provider":"upm","versions":{"4.2.1":{"_upm":{"changelog":"### Fixed\n\n- [AutoTile] Fix AutoTile Create Asset menu item"},"unity":"6000.1","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"unityRelease":"0a9","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@4.2/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"4.2.1","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"011cbda330b260b398a1623b0a3987e902c2386f","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-4.2.1.tgz"}},"4.1.0":{"_upm":{"changelog":"### Fixed\n\n- [GameObjectBrush] Allow expansion of SceneRoot Grid foldout when clicking on label\n- [GridInformation] Fix exception when serializing GridInformation component if component is part of a Prefab\n- Remove dependency on com.unity.ugui"},"unity":"6000.0","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@4.1/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"4.1.0","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"13634da7dbe06c39bac6bbe2d1a166cf91f58ad7","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-4.1.0.tgz"}},"2.2.8":{"_upm":{"changelog":"### Fixed\n- [GameObjectBrush] Allow expansion of SceneRoot Grid foldout when clicking on label\n- [GridInformation] Fix exception when serializing GridInformation component if component is part of a Prefab"},"unity":"2021.1","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@2.2/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"2.2.8","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"29aeb7c4a781abcd6ed1f3aee7ed2deca41ab4ae","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.2.8.tgz"}},"3.1.3":{"_upm":{"changelog":"### Fixed\n- [GameObjectBrush] Allow expansion of SceneRoot Grid foldout when clicking on label\n- [GridInformation] Fix exception when serializing GridInformation component if component is part of a Prefab"},"unity":"2022.1","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@3.1/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"3.1.3","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"909832ffa35df0b1421eb14dd65485e5a72a7aa6","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-3.1.3.tgz"}},"3.1.2":{"_upm":{"changelog":"### Fixed\n- [GameObjectBrush] Use cell offset to determine location of GameObject when painting and erasing"},"type":"assets","unity":"2022.1","upmCi":{"footprint":"1da862484a47129d4046e30aa623338e0554fac6"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"741b52ca8bcd71b4e016208dbfe792374ca334c8"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"3.1.2"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@3.1/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"3.1.2","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"06e9b025c3d9b8136acbe56a2e34de7a17129864","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-3.1.2.tgz"}},"2.2.7":{"_upm":{"changelog":"### Fixed\n- [GameObjectBrush] Use cell offset to determine location of GameObject when painting and erasing"},"type":"assets","unity":"2021.1","upmCi":{"footprint":"83281e592233fa4125a97906faf8c8fdebcd56d1"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"719857e581df2bb936a07a422a9ee7fee18dc76c"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.2.7"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@2.2/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"2.2.7","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"4ba6fa09698a26e1fe9929f2ed291ae67973c250","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.2.7.tgz"}},"4.0.2":{"_upm":{"changelog":"### Fixed\n- [GameObjectBrush] Use cell offset to determine location of GameObject when painting and erasing"},"type":"assets","unity":"2023.1","upmCi":{"footprint":"1dc77b3f9a7dc9ec88a1b175812698bd0c8714ff"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"21a24803135ec4fbe47be9ccd27fb06e47d06d88"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"4.0.2"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@4.0/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"4.0.2","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"6a6fc3dece599bfc4df5dd2cb0da6635868f1281","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-4.0.2.tgz"}},"2.2.6":{"_upm":{"changelog":"### Fixed\n- [GameObjectBrush] Set HideFlags of instantiated GameObject to HideFlags.None when painting\n- [GridInformation] Fix serialization of GridInformationKey/Value\n- [PrefabBrush] Fix crash when performing undo operation with PrefabBrush"},"type":"assets","unity":"2021.1","upmCi":{"footprint":"3e3a7c2cc8b4072bb1379a9a34e189a73554fd58"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"0bf9be926d2a993b13474925561239fa0d83ef5a"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.2.6"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@2.2/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"2.2.6","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"f0fd3f5f1eaa9c1974976a44c08e564fad3b467e","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.2.6.tgz"}},"3.1.1":{"_upm":{"changelog":"### Fixed\n- [GameObjectBrush] Set HideFlags of instantiated GameObject to HideFlags.None when painting\n- [GridInformation] Fix serialization of GridInformationKey/Value"},"type":"assets","unity":"2022.1","upmCi":{"footprint":"03522ca9708043c345659653d3ab7f8062666ddd"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"04abca0a975bb264c1f7530288b4ddfa2f4c45ea"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"3.1.1"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@3.1/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"3.1.1","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"ef57afb546d46c720718e472a0cfd4fe7538f073","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-3.1.1.tgz"}},"4.0.1":{"_upm":{"changelog":"### Fixed\n- [GameObjectBrush] Set HideFlags of instantiated GameObject to HideFlags.None when painting\n- [GridInformation] Fix serialization of GridInformationKey/Value"},"type":"asset","unity":"2023.1","upmCi":{"footprint":"e48f8942babb511d4a959a658cbe96fcbc536dfc"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"5c1725c663304c56eb3b1612a8dae90f4a0b9fa5"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"4.0.1"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@4.0/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"4.0.1","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"d8bb8d374e40f42ec97de04750b3cd9938f37246","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-4.0.1.tgz"}},"3.1.0":{"_upm":{"changelog":"### Added\n- [AnimatedTileEditor] -Add field to change TileAnimationFlags (For 2022.2.x)\n- [RuleTile] -Add RotatedMirror rule which checks neighbors using both the mirror and rotation Rule in addition to the standard rotation Rule\n\n### Fixed\n- [GameObjectBrush] Fix placement of GameObjects for Hexagon Layouts with Anchor\n- [GameObjectBrush] Align rotation and flip to 2D View in Editor\n- [RandomBrush] Use default color and transform when painting over with RandomBrush\n\n### Changed\n- [AnimatedTileEditor] Moved to Unity.2d.Tilemap.Extras.Editor"},"type":"asset","unity":"2022.1","upmCi":{"footprint":"1d074ca74a2d695bf3e7e50a2942e2693d5f794c"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"0619ff5c155088e4a8530c994129cd798bcfd97f"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"3.1.0"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@3.1/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"3.1.0","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"11e81aa898389b25f9ce277fdb40a8f406d1c60a","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-3.1.0.tgz"}},"4.0.0":{"_upm":{"changelog":"### Added\n- [RuleTile] Add RotatedMirror rule which checks neighbors using both the mirror and rotation Rule in addition to the standard rotation Rule\n\n### Fixed\n- [GameObjectBrush] Validate size of GameObjectBrush when it changes"},"type":"asset","unity":"2023.1","upmCi":{"footprint":"9700ea727395a7b9e99c30cc1b6d3ab7f7007532"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"9961725b5671e3bdfad54e45abc175e446f2131e"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"4.0.0"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@4.0/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"4.0.0","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"1ea355fab44fb1f3e6718ffc5110378066b6c59d","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-4.0.0.tgz"}},"2.2.5":{"_upm":{"changelog":"### Fixed\n- [GameObjectBrush] Fix placement of GameObjects for Hexagon Layouts with Anchor\n- [GameObjectBrush] Align rotation and flip to 2D View in Editor\n- [RandomBrush] Use default color and transform when painting over with RandomBrush"},"type":"asset","unity":"2021.1","upmCi":{"footprint":"257f9be1042ab96f42b7b46238ff655bf8b2e793"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"0c2229262e21f917bff8c9669b96e2a3147428dd"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.2.5"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@2.2/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"2.2.5","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"9a3f8d4d1d8aedb1d8936b98237475243d7871ed","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.2.5.tgz"}},"4.0.0-pre.3":{"_upm":{"changelog":"### Fixed\n- [TintBrush] Replace obsolete method calls.\n- [TintBrushSmooth] Replace obsolete method calls.\n- [GameObjectBrush] Fix placement of GameObjects for Hexagon Layouts with Anchor\n- [GameObjectBrush] Align rotation and flip to 2D View in Editor\n- [RandomBrush] Use default color and transform when painting over with RandomBrush\n\n### Added\n- [AnimatedTileEditor] Add field to change TileAnimationFlags\n\n### Changed\n- [AnimatedTileEditor] Moved to Unity.2d.Tilemap.Extras.Editor"},"type":"asset","unity":"2023.1","upmCi":{"footprint":"95749e01960c09bfe2ac4ebf52e1c2a45ba9418a"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"0860ac36275ca081196ae54e56078366b73b9c6c"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"4.0.0-pre.3"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@4.0/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"4.0.0-pre.3","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"84bb861f1261656d99002e2f3f0d681c96677c50","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-4.0.0-pre.3.tgz"}},"2.2.4":{"type":"asset","unity":"2021.1","upmCi":{"footprint":"b6d00e7e921a3db898f7548383ef2120f3e84337"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"2d8c9252168c8fe6d11dce4cfeb56d4d4ade3a70"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.2.4"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@2.2/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"2.2.4","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"06d958859e08622f147e1324044b99a058dbed71","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.2.4.tgz"}},"3.0.3":{"_upm":{"changelog":"### Fixed\n- [GridInformation] Implement IEquatable for GridInformationKey \n- [PrefabRandomBrush] Fix possible NullReferenceException in PrefabRandomBrush\n- [GameObjectBrush] Fix placement of GameObjects when Cell Gap is set"},"type":"asset","unity":"2022.1","upmCi":{"footprint":"bff5c166d08043b48efcc198721fbdc5cfa485fc"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"78bbbfd9a60bd0618c0d4f3b105d861211da2f22"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"3.0.3"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@3.0/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"3.0.3","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"bca265ef5c5eeb9c3e70045e8cb0bb7649ee1600","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-3.0.3.tgz"}},"4.0.0-pre.2":{"type":"asset","unity":"2023.1","upmCi":{"footprint":"cf2fe40b5f486367f757aabeff4fb4f6d9c19902"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"d2e6ed91ece0ea5ae1079b6be74aee24c5671cee"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"4.0.0-pre.2"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.2d.tilemap.extras@4.0/manual/index.html","name":"com.unity.2d.tilemap.extras","version":"4.0.0-pre.2","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"9f33af16b4c06e2221851d9ba9b1fda30a1468cc","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-4.0.0-pre.2.tgz"}},"1.8.4-preview":{"type":"asset","unity":"2020.1","upmCi":{"footprint":"9e47e9e6226011b806a0e4fe9956bc11b3d4b369"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"070f2b98b550d67f272032f11dae5e7efb19bd1e"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.8.4-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.8.4-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"35dbe300060bf6150a7aa323d3029be29c3ccdd8","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.8.4-preview.tgz"}},"4.0.0-pre.1":{"type":"asset","unity":"2023.1","upmCi":{"footprint":"9b6bb0b3e1776499490f5ac81019c2e87b17ac7e"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"a4cad2eb14ac5cfb7e3c426331f5c66649a4ce58"},"relatedPackages":{"com.unity.2d.tilemap.extras.tests":"4.0.0-pre.1"},"name":"com.unity.2d.tilemap.extras","version":"4.0.0-pre.1","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"38d9220ad2eabf3692ca1ed3a5dd8e01e919e27f","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-4.0.0-pre.1.tgz"}},"2.2.3":{"_id":"com.unity.2d.tilemap.extras@2.2.3","_upm":{"changelog":"### Fixed\r\n- [RuleOverrideTile] -Mark RuleOverrideTile InstanceTile as dirty when overriding RuleTile for the RuleOverrideTile changes\r\n- [RuleOverrideTile] -Fix undo for RuleOverrideTile when overriding RuleTile has changed\r\n- [RuleTileEditor] -Fix height for ReorderableList when extending the view for marking Rules"},"type":"asset","_from":"file:/tmp/com.unity.2d.tilemap.extras@2.2.3-lu9u3_xx.tgz","unity":"2021.1","upmCi":{"footprint":"b61e53482964bffe551c943f9be7fd78f73700f1"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_resolved":"/tmp/com.unity.2d.tilemap.extras@2.2.3-lu9u3_xx.tgz","_integrity":"sha512-J9KSCmGhS1ab+RNAe/to10kw2VBbjX3sE+5DoLEpl9yFCkuCpufHCKHSidciJwprxHayHf/NRJNwzk8rqUBQRw==","repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"23a879f6458e28d4082f486e6c2375ef4c281145"},"_npmVersion":"7.5.2","_nodeVersion":"12.22.5","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.2.3"},"name":"com.unity.2d.tilemap.extras","version":"2.2.3","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"eb3eb32f547ae9106094fbc6e931b05c7731a780","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.2.3.tgz"}},"3.0.2":{"_id":"com.unity.2d.tilemap.extras@3.0.2","upm":{"changelog":"### Fixed\r\n- [RuleOverrideTile] -Mark RuleOverrideTile InstanceTile as dirty when overriding RuleTile for the RuleOverrideTile changes\r\n- [RuleOverrideTile] -Fix undo for RuleOverrideTile when overriding RuleTile has changed\r\n- [RuleTileEditor] -Fix height for ReorderableList when extending the view for marking Rules"},"type":"asset","_from":"file:/tmp/com.unity.2d.tilemap.extras@3.0.2-5yuf9euz.tgz","unity":"2022.1","upmCi":{"footprint":"4724fec3987f9882ef03f4966c595284fbf27b6f"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_resolved":"/tmp/com.unity.2d.tilemap.extras@3.0.2-5yuf9euz.tgz","_integrity":"sha512-q2eVw+zMOmSh/g2qAbFtUX3b+Te3LFrvi8coehPa5ii9owVdVQJqaPJslQADDqOni07fk4RaBEqCrgwqU2JVyA==","repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"8454efea2f724c27d6bb0092fe7bb5b169ccea44"},"_npmVersion":"7.5.2","_nodeVersion":"12.22.5","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"3.0.2"},"name":"com.unity.2d.tilemap.extras","version":"3.0.2","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"df3af5583f1485634e345bf05a9853165ec11629","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-3.0.2.tgz"}},"2.2.2":{"_id":"com.unity.2d.tilemap.extras@2.2.2","upm":{"changelog":"### Fixed\r\n- [AnimatedTileEditor] -Fix undo when setting number of Sprites for Animated Tile\r\n- [RuleTile] -Fix data for custom container fields not being transferred in RuleOverrideTiles overriding a Custom Rule Tile\r\n- [RuleTileEditor] -Fix undo when setting number of Rules for Rule Tile\r\n- [RuleTileEditor] -Use different text color for Extend Neighbors with dark and light skin"},"type":"asset","_from":"file:/tmp/com.unity.2d.tilemap.extras@2.2.2-4etnxlbw.tgz","unity":"2021.1","upmCi":{"footprint":"edf49fcdffde3218e7c5b7accc56dd418901d16f"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_resolved":"/tmp/com.unity.2d.tilemap.extras@2.2.2-4etnxlbw.tgz","_integrity":"sha512-KDDtT00UcPq2GWnx1zU+EpZzlzsb0mc6Vty3mJcFtV8Pf0G8DDzXFybPGNNWBESKUTXE0sohxm2l7T9etD72rQ==","repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"5b2ebfac9790f6a71a896669a8617bf600311d15"},"_npmVersion":"7.5.2","_nodeVersion":"12.22.5","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.2.2"},"name":"com.unity.2d.tilemap.extras","version":"2.2.2","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"4652c964926597c131e4b1ae97fcaff70ada5c09","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.2.2.tgz"}},"1.8.3-preview":{"_id":"com.unity.2d.tilemap.extras@1.8.3-preview","upm":{"changelog":"### Fixed\r\n- [RuleOverrideTile] -Mark RuleOverrideTile InstanceTile as dirty when overriding RuleTile for the RuleOverrideTile changes\r\n- [RuleOverrideTile] -Fix undo for RuleOverrideTile when overriding RuleTile has changed\r\n- [RuleTileEditor] -Fix height for ReorderableList when extending the view for marking Rules"},"type":"asset","_from":"file:/tmp/com.unity.2d.tilemap.extras@1.8.3-preview-5333tddo.tgz","unity":"2020.1","upmCi":{"footprint":"b6628e6f7dac4da0c6ca30f7254be339ed170c57"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_resolved":"/tmp/com.unity.2d.tilemap.extras@1.8.3-preview-5333tddo.tgz","_integrity":"sha512-8WFQxl6JpckjKP0VeFnu6uEb7uZwCqL9vU5cdNVyXlniJ8iz2IBvjHZXPHEoFEr2S5ttskRWG3UHa1882e//iw==","repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"28661469c88cadf217e4a97e1041745d90fbac0d"},"_npmVersion":"7.5.2","_nodeVersion":"12.22.5","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.8.3-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.8.3-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"03a8f0789bedb3716020e91d69838cc6b6339e14","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.8.3-preview.tgz"}},"1.8.2-preview":{"_id":"com.unity.2d.tilemap.extras@1.8.2-preview","upm":{"changelog":"### Fixed\r\n- [AnimatedTileEditor] -Fix undo when setting number of Sprites for Animated Tile\r\n- [RuleTile] -Fix data for custom container fields not being transferred in RuleOverrideTiles overriding a Custom Rule Tile\r\n- [RuleTileEditor] -Fix undo when setting number of Rules for Rule Tile\r\n- [RuleTileEditor] -Use different text color for Extend Neighbors with dark and light skin"},"type":"asset","_from":"file:/tmp/com.unity.2d.tilemap.extras@1.8.2-preview-guozthqp.tgz","unity":"2020.1","upmCi":{"footprint":"0b19bc5b654c12c00aca5098c9c7d25fbb1892c9"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_resolved":"/tmp/com.unity.2d.tilemap.extras@1.8.2-preview-guozthqp.tgz","_integrity":"sha512-3cgyL39hvGfd7iDHcSjb6zs9W/2GY1Oz/GjA7MmY144v39+SNb3o9lfEbTebCBJzc0j5cvafcHprO8Za0bs2AQ==","repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"432353fe181be3e053603c2e7b6dfa8205e8e97e"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.8.2-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.8.2-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"81218e409d13ed613328b5d64f96e0eccc66d8a0","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.8.2-preview.tgz"}},"3.0.1":{"_id":"com.unity.2d.tilemap.extras@3.0.1","upm":{"changelog":"- [AnimatedTileEditor] -Fix undo when setting number of Sprites for Animated Tile\r\n- [RuleTile] -Fix data for custom container fields not being transferred in RuleOverrideTiles overriding a Custom Rule Tile\r\n- [RuleTileEditor] -Fix undo when setting number of Rules for Rule Tile\r\n- [RuleTileEditor] -Use different text color for Extend Neighbors with dark and light skin"},"type":"asset","_from":"file:/tmp/com.unity.2d.tilemap.extras@3.0.1-tmaljy2b.tgz","unity":"2022.1","upmCi":{"footprint":"203208612a1accec08f6a5da187778018f0a6948"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_resolved":"/tmp/com.unity.2d.tilemap.extras@3.0.1-tmaljy2b.tgz","_integrity":"sha512-LmEFxZ81gZFmhC+eCNYzZkkyyRAVPKFjMQyYYpbPpH+GPlN7WLRQ2usIlps//FW6vUVYAmcp118N5CDlOE6Hng==","repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"e27c9810a5154a8b9c97605565fc19e59723f461"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"3.0.1"},"name":"com.unity.2d.tilemap.extras","version":"3.0.1","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"c65c93a389b18f5973f07ef516d1fcb7d6b22209","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-3.0.1.tgz"}},"3.0.0":{"_id":"com.unity.2d.tilemap.extras@3.0.0","type":"asset","_from":"file:com.unity.2d.tilemap.extras-3.0.0.tgz","unity":"2022.1","upmCi":{"footprint":"820eda622ff8ba7c58a1e09f527735cf92176847"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_resolved":"/pkgprom/com.unity.2d.tilemap.extras-3.0.0.tgz","_integrity":"sha512-0m7bRG+lA5lbVY2FpHEqmkLd/+6YpZtEn5t5emQRfk22GJY2WIXVjkcJMz3tPu47P7TJNFeGjnPg4gsZfMAaNA==","repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"0dea89acc6b7d375f0aa85c65c7a19bac94b2fa3"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"3.0.0"},"name":"com.unity.2d.tilemap.extras","version":"3.0.0","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"eb3e619247f0af1126c159ca864d6038812ab377","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-3.0.0.tgz"}},"2.2.1":{"_id":"com.unity.2d.tilemap.extras@2.2.1","type":"asset","_from":"file:com.unity.2d.tilemap.extras-2.2.1.tgz","unity":"2021.1","upmCi":{"footprint":"0c6a4424314447303a5c8798b1bbb1f1c4cf98a6"},"samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_resolved":"/pkgprom/com.unity.2d.tilemap.extras-2.2.1.tgz","_integrity":"sha512-o0UMDTJQvIWgrzVJkwJ/TqeDL1I+Nfa8D/qq4tIynYHWdr7QHZ0Ho3+hAZkTd+KBLz6k17cvckdQmNuGsaBflw==","repository":{"url":"https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"ab6199c75d7737ad61837747f178a999273bcf88"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.2.1"},"name":"com.unity.2d.tilemap.extras","version":"2.2.1","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"4f5aa009f955052d67b2366f541c7ca3968b96bc","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.2.1.tgz"}},"1.8.1-preview":{"_id":"com.unity.2d.tilemap.extras@1.8.1-preview","bugs":{"url":"https://github.com/Unity-Technologies/2d-extras/issues"},"type":"asset","_from":"file:com.unity.2d.tilemap.extras-1.8.1-preview.tgz","unity":"2020.1","upmCi":{"footprint":"fbb6aed40454de1214a80fc289bb275cf642a87b"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2020.1.1f1` onwards. \r\n\r\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) or this great [video](https://youtu.be/FwOxLkJTXag) for more information on how to use this!\r\n\r\n[![How to make Custom Rule Tiles in Unity Video](http://img.youtube.com/vi/FwOxLkJTXag/0.jpg)](http://www.youtube.com/watch?v=FwOxLkJTXag \"How to make Custom Rule Tiles in Unity\")\r\n\r\n### Contribution Notice\r\nFrom 7 January 2019 until 12 February 2020, all contributions are licensed under the Unity Companion License for Unity-dependent projects (see https://unity3d.com/legal/licenses/unity_companion_license).\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"homepage":"https://github.com/Unity-Technologies/2d-extras#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"613f08d9f4fc5d1e0bb24139c94b917d7262b4c7"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.8.1-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.8.1-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"6bf05b1e87a5f4bd3a31de042ed7f54100b5ba74","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.8.1-preview.tgz"}},"2.2.0":{"_id":"com.unity.2d.tilemap.extras@2.2.0","bugs":{"url":"https://github.com/Unity-Technologies/2d-extras/issues"},"type":"asset","_from":"file:com.unity.2d.tilemap.extras-2.2.0.tgz","unity":"2021.1","upmCi":{"footprint":"c96d7f0f3a91f107a201e2b8e3195bf15e641234"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2021.1.0f1` onwards. \r\n\r\nPlease use the `2020.3` branch for Unity 2020.1-2020.3 versions.\r\n\r\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n\r\n### Contribution Notice\r\nFrom 7 January 2019 until 12 February 2020, all contributions are licensed under the Unity Companion License for Unity-dependent projects (see https://unity3d.com/legal/licenses/unity_companion_license).\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"homepage":"https://github.com/Unity-Technologies/2d-extras#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"9e95426d54e44a24dacc109491c976906c207fd9"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.2.0"},"name":"com.unity.2d.tilemap.extras","version":"2.2.0","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"9a741be32479aab641883c5cdd2a0341abf74f5a","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.2.0.tgz"}},"1.8.0-preview":{"_id":"com.unity.2d.tilemap.extras@1.8.0-preview","bugs":{"url":"https://github.com/Unity-Technologies/2d-extras/issues"},"type":"asset","_from":"file:com.unity.2d.tilemap.extras-1.8.0-preview.tgz","unity":"2020.1","upmCi":{"footprint":"ccf015a418803a3bb45369946c77afbb9608f93b"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2020.1.1f1` onwards. \r\n\r\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n\r\n### Contribution Notice\r\nFrom 7 January 2019 until 12 February 2020, all contributions are licensed under the Unity Companion License for Unity-dependent projects (see https://unity3d.com/legal/licenses/unity_companion_license).\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"homepage":"https://github.com/Unity-Technologies/2d-extras#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"1144e0bb9586c083fd0308672690f6359a6aebc7"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.8.0-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.8.0-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0","com.unity.modules.jsonserialize":"1.0.0"},"dist":{"shasum":"bb964fcfa4c8cec995729d9369e5fd75292afb15","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.8.0-preview.tgz"}},"1.7.0-preview":{"_id":"com.unity.2d.tilemap.extras@1.7.0-preview","bugs":{"url":"https://github.com/Unity-Technologies/2d-extras/issues"},"type":"asset","_from":"file:com.unity.2d.tilemap.extras-1.7.0-preview.tgz","unity":"2020.1","upmCi":{"footprint":"34b173cd7d93b92428c63c4149ae9cc894fcef95"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2020.1.1f1` onwards. \r\n\r\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n\r\n### Contribution Notice\r\nFrom 7 January 2019 until 12 February 2020, all contributions are licensed under the Unity Companion License for Unity-dependent projects (see https://unity3d.com/legal/licenses/unity_companion_license).\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"homepage":"https://github.com/Unity-Technologies/2d-extras#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"58fe2b009b43f0f5cfe8f0014dd25db7e97a5d08"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.7.0-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.7.0-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0"},"dist":{"shasum":"ed873f09b5573aa34dfe8c39307182453a8e4b44","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.7.0-preview.tgz"}},"2.0.0":{"_id":"com.unity.2d.tilemap.extras@2.0.0","bugs":{"url":"https://github.com/Unity-Technologies/2d-extras/issues"},"type":"asset","unity":"2021.1","upmCi":{"footprint":"9c40c1e49cbd14d9da2009faf03dd0aabf276fb3"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2020.1.1f1` onwards. \r\n\r\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n\r\n### Contribution Notice\r\nFrom 7 January 2019 until 12 February 2020, all contributions are licensed under the Unity Companion License for Unity-dependent projects (see https://unity3d.com/legal/licenses/unity_companion_license).\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_npmUser":{},"homepage":"https://github.com/Unity-Technologies/2d-extras#readme","repository":{"url":"git+https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"dc1c26a83c330e23776675c91c2c0f22764de9c7"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.0.0"},"name":"com.unity.2d.tilemap.extras","version":"2.0.0","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.\n\nThe following are included in the package:\nBrushes: GameObject Brush, Group Brush, Line Brush, Random Brush\nTiles: Animated Tile, Rule Tile, Rule Override Tile\nOther: Grid Information, Custom Rules for Rule Tile","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0"},"dist":{"shasum":"637d49b4f98bfdf997fe46adde5f2a32edc16b51","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.0.0.tgz"}},"1.6.0-preview.1":{"_id":"com.unity.2d.tilemap.extras@1.6.0-preview.1","type":"asset","_from":"file:com.unity.2d.tilemap.extras-1.6.0-preview.1.tgz","unity":"2019.2","upmCi":{"footprint":"69f9fe60e830da87c3c1ba63f8d6abf094b240db"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#2019.4\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2019.4.x`. \r\n\r\nPlease use the `2019.4` branch or the `1.5.x-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/2d.git","type":"git","revision":"f1f3fd0500527b941bb0b55cd8f85867bf0884e5"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.6.0-preview.1"},"name":"com.unity.2d.tilemap.extras","version":"1.6.0-preview.1","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0"},"dist":{"shasum":"152a54d93a5eabe67b43490faee98e95719c933b","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.6.0-preview.1.tgz"}},"1.6.4-preview":{"_id":"com.unity.2d.tilemap.extras@1.6.4-preview","bugs":{"url":"https://github.com/Unity-Technologies/2d-extras/issues"},"type":"asset","_from":"file:com.unity.2d.tilemap.extras-1.6.4-preview.tgz","unity":"2020.1","upmCi":{"footprint":"ac39c073fd8535676f8b4236110988240c330f79"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2020.1.1f1` onwards. \r\n\r\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n\r\n### Contribution Notice\r\nFrom 7 January 2019 until 12 February 2020, all contributions are licensed under the Unity Companion License for Unity-dependent projects (see https://unity3d.com/legal/licenses/unity_companion_license).\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"homepage":"https://github.com/Unity-Technologies/2d-extras#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"d5143a6deb51775957213697d14f65272c220a46"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.6.4-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.6.4-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0"},"dist":{"shasum":"c22469b42d51ee959070d4c38f1c6f6b5721165f","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.6.4-preview.tgz"}},"2.0.0-pre.2":{"_id":"com.unity.2d.tilemap.extras@2.0.0-pre.2","bugs":{"url":"https://github.com/Unity-Technologies/2d-extras/issues"},"type":"asset","_from":"file:com.unity.2d.tilemap.extras-2.0.0-pre.2.tgz","unity":"2021.1","upmCi":{"footprint":"837d1072a7906b3070c738b1e62102c3fd70c7a2"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2020.1.1f1` onwards. \r\n\r\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n\r\n### Contribution Notice\r\nFrom 7 January 2019 until 12 February 2020, all contributions are licensed under the Unity Companion License for Unity-dependent projects (see https://unity3d.com/legal/licenses/unity_companion_license).\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"homepage":"https://github.com/Unity-Technologies/2d-extras#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"965ea83266c4d524edf0e2c0cb51fce3d4dca843"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.0.0-pre.2"},"name":"com.unity.2d.tilemap.extras","version":"2.0.0-pre.2","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0"},"dist":{"shasum":"09fb88d766672fe560b17179132bee1f49b76c4d","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.0.0-pre.2.tgz"}},"1.6.3-preview":{"_id":"com.unity.2d.tilemap.extras@1.6.3-preview","bugs":{"url":"https://github.com/Unity-Technologies/2d-extras/issues"},"type":"asset","_from":"file:com.unity.2d.tilemap.extras-1.6.3-preview.tgz","unity":"2020.1","upmCi":{"footprint":"6fb32d72a4229cb4b5ca392f6db6245a493723da"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2020.1.1f1` onwards. \r\n\r\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n\r\n### Contribution Notice\r\nFrom 7 January 2019 until 12 February 2020, all contributions are licensed under the Unity Companion License for Unity-dependent projects (see https://unity3d.com/legal/licenses/unity_companion_license).\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"homepage":"https://github.com/Unity-Technologies/2d-extras#readme","_resolved":"","_integrity":"","repository":{"url":"git+https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"cdc7c7366f66bba1db3fbf680fc6c36130dcf87a"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.6.3-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.6.3-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0"},"dist":{"shasum":"f34a6156e7384b347d8f56f689cee23ad8ee2b76","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.6.3-preview.tgz"}},"2.0.0-pre.1":{"_id":"com.unity.2d.tilemap.extras@2.0.0-pre.1","bugs":{"url":"https://github.com/Unity-Technologies/2d-extras/issues"},"type":"asset","unity":"2021.1","upmCi":{"footprint":"75eb2c504571c34a6235796e97baf5043809a30d"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2020.1.1f1` onwards. \r\n\r\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_npmUser":{},"homepage":"https://github.com/Unity-Technologies/2d-extras#readme","repository":{"url":"git+https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"dda37166e00bf53f843525c497efacbce3b2d8c2"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"2.0.0-pre.1"},"name":"com.unity.2d.tilemap.extras","version":"2.0.0-pre.1","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0"},"dist":{"shasum":"355e06d0b40786380510cd507712d415c1b3e7d7","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-2.0.0-pre.1.tgz"}},"1.6.2-preview":{"_id":"com.unity.2d.tilemap.extras@1.6.2-preview","bugs":{"url":"https://github.com/Unity-Technologies/2d-extras/issues"},"type":"asset","unity":"2020.1","upmCi":{"footprint":"de5355cc04ffe1547d920b51ea6eda2e80e83d88"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2020.1.1f1` onwards. \r\n\r\nPlease use the `1.5.0-preview` tag for Unity 2019.2-2019.4 versions.\r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3-2018.4 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_npmUser":{},"homepage":"https://github.com/Unity-Technologies/2d-extras#readme","repository":{"url":"git+https://github.com/Unity-Technologies/2d-extras.git","type":"git","revision":"75c0a5b4d37054d78d594fa493eedc994404ffce"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.6.2-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.6.2-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0"},"dist":{"shasum":"0b2116131802c45c683fe91e375c06ed21aa3937","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.6.2-preview.tgz"}},"1.6.1-preview":{"_id":"com.unity.2d.tilemap.extras@1.6.1-preview","type":"asset","_from":"file:com.unity.2d.tilemap.extras-1.6.1-preview.tgz","unity":"2020.1","upmCi":{"footprint":"c8e4018367b5b667de57b54bd5c7e614f393b15d"},"readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2019.2.0f1` onwards. \r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places the containing Prefab onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **PrefabRandom**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n","samples":[{"path":"Samples~/WaterfallAnimatedTile","description":"An example implementation of an Animated Tile.","displayName":"Waterfall Animated Tile"},{"path":"Samples~/PipeRuleTile","description":"An example implementation of a Rule Tile with rules matching four-way orthogonal neighbors.","displayName":"Pipe Rule Tile"},{"path":"Samples~/DungeonRuleTile","description":"An example implementation of a Rule Tile with rules matching eight-way orthogonal and diagonal neighbors.","displayName":"Dungeon Rule Tile"}],"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/2d.git","type":"git","revision":"5aa372cf8a10f75ee3cddc7db0507521eb657b6b"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.6.1-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.6.1-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0"},"dist":{"shasum":"30be391bea54bb5c3cda632b90e6deffcebda7f1","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.6.1-preview.tgz"}},"1.5.0-preview":{"_id":"com.unity.2d.tilemap.extras@1.5.0-preview","type":"asset","_from":"../../../var/folders/tn/t8btbstx12l33r08ww_2c0_1_q91g9/T/com.unity.2d.tilemap.extras-1.5.0-preview.tgz","unity":"2019.2","readme":"# 2d-extras\r\n\r\n2d-extras is a repository containing helpful reusable scripts which you can use to make your games, with a slant towards 2D. Feel free to customise the behavior of the scripts to create new tools for your use case! \r\n\r\nImplemented examples using these scripts can be found in the sister repository [2d-techdemos](https://github.com/Unity-Technologies/2d-techdemos \"2d-techdemos: Examples for 2d features\").\r\n\r\nAll items in the repository are grouped by use for a feature and are listed below.\r\n\r\n## How to use this\r\n\r\nYou can use this in two different ways: downloading this repository or adding it to your project's Package Manager manifest.\r\n\r\nAlternatively, you can pick and choose the scripts that you want by placing only these scripts in your project's `Assets` folder.\r\n\r\n### Download\r\n\r\n#### Setup\r\nDownload or clone this repository into your project in the folder `Packages/com.unity.2d.tilemap.extras`.\r\n\r\n### Package Manager Manifest\r\n\r\n#### Requirements\r\n[Git](https://git-scm.com/) must be installed and added to your path.\r\n\r\n#### Setup\r\nThe following line needs to be added to your `Packages/manifest.json` file in your Unity Project under the `dependencies` section:\r\n\r\n```json\r\n\"com.unity.2d.tilemap.extras\": \"https://github.com/Unity-Technologies/2d-extras.git#master\"\r\n```\r\n\r\n### Tilemap\r\n\r\nFor use with Unity `2019.2.0f1` onwards. \r\n\r\nPlease use the `2019.1` tag for Unity 2019.1 versions. \r\n\r\nPlease use the `2018.3` branch or the `2018.3` tag for Unity 2018.3 versions. \r\n\r\nPlease use the `2018.2` branch or the `2018.2` tag for Unity 2018.2 versions. \r\n\r\nPlease use the `2017` branch or the `2017` tag for earlier versions of Unity (from 2017.2 and up).\r\n\r\n##### Brushes\r\n\r\n- **Coordinate**: This Brush displays the cell coordinates it is targeting in the SceneView. Use this as an example to create brushes which have extra visualization features when painting onto a Tilemap.\r\n- **Line**: This Brush helps draw lines of Tiles onto a Tilemap. The first click of the mouse sets the starting point of the line and the second click sets the ending point of the line and draws the lines of Tiles. Use this as an example to modify brush painting behaviour to making painting quicker with less actions.\r\n- **Random**: This Brush helps to place random Tiles onto a Tilemap. Use this as an example to create brushes which store specific data per brush and to make brushes which randomize behaviour.\r\n- **Prefab**: This Brush instances and places a randomly selected Prefabs onto the targeted location and parents the instanced object to the paint target. Use this as an example to quickly place an assorted type of GameObjects onto structured locations.\r\n- **GameObject**: This Brush instances, places and manipulates GameObjects onto the scene. Use this as an example to create brushes which targets objects other than tiles for manipulation.\r\n- **TintBrush**: Brush to edit Tilemap per-cell tint colors.\r\n- **TintBrushSmooth**: Advanced tint brush for interpolated tint color per-cell. Requires the use of custom shader (see TintedTilemap.shader) and helper component TileTextureGenerator.\r\n- **Group**: This Brush helps to pick Tiles which are grouped together by position. Gaps can be set to identify if Tiles belong to a Group. Limits can be set to ensure that an over-sized Group will not be picked. Use this as an example to create brushes that have the ability to choose and pick whichever Tiles it is interested in. \r\n\r\n##### Tiles\r\n\r\n- **Animated**: Animated Tiles are tiles which run through and display a list of sprites in sequence.\r\n- **Pipeline**: Pipeline Tiles are tiles which take into consideration its orthogonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **Random**: Random Tiles are tiles which pseudo-randomly pick a sprite from a given list of sprites and a target location, and displays that sprite.\r\n- **Terrain**: Terrain Tiles, similar to Pipeline Tiles, are tiles which take into consideration its orthogonal and diagonal neighboring tiles and displays a sprite depending on whether the neighboring tile is the same tile.\r\n- **RuleTile**: Generic visual tile for creating different tilesets like terrain, pipeline, random or animated tiles.\r\n- **Hexagonal Rule Tile**: A Rule Tile for use with Hexagonal Grids. Enable Flat Top for Flat Top Hexagonal Grids and disable for Pointed Top Hexagonal Grids.\r\n- **Isometric Rule Tile**: A Rule Tile for use with Isometric Grids.\r\n- **RuleOverrideTile**: Rule Override Tiles are Tiles which can override a subset of Rules for a given Rule Tile to provide specialised behaviour while keeping most of the Rules originally set in the Rule Tile.\r\n- **Weighted Random**: Weighted Random Tiles are tiles which randomly pick a sprite from a given list of sprites and a target location, and displays that sprite. The sprites can be weighted with a value to change its probability of appearing.\r\n\r\n##### Other\r\n\r\n- **GridInformation**: A simple MonoBehaviour that stores and provides information based on Grid positions and keywords.\r\n- **Custom Rules for RuleTile**: This helps to create new custom Rules for the Rule Tile. Check the [Wiki](https://github.com/Unity-Technologies/2d-extras/wiki) for more information on how to use this.\r\n","_shasum":"95d12f27b0518e4e4664f88e287d112dbacf7c49","scripts":{},"_npmUser":{},"_resolved":"file:../../../var/folders/tn/t8btbstx12l33r08ww_2c0_1_q91g9/T/com.unity.2d.tilemap.extras-1.5.0-preview.tgz","repository":{"url":"https://github.cds.internal.unity3d.com/unity/2d.git","type":"git","revision":"b9b04d15a332a0572921671b61cc9c60e15aab1c","footprint":"3d21fd7552667030dece43708e0af8d97dad6538"},"_npmVersion":"3.10.10","_nodeVersion":"6.10.0","readmeFilename":"README.md","relatedPackages":{"com.unity.2d.tilemap.extras.tests":"1.5.0-preview"},"name":"com.unity.2d.tilemap.extras","version":"1.5.0-preview","displayName":"2D Tilemap Extras","description":"2D Tilemap Extras is a package that contains extra scripts for use with 2D Tilemap features in Unity. These include custom Tiles and Brushes for the Tilemap feature.","keywords":["2d"],"dependencies":{"com.unity.2d.tilemap":"1.0.0","com.unity.modules.tilemap":"1.0.0"},"dist":{"shasum":"95d12f27b0518e4e4664f88e287d112dbacf7c49","tarball":"https://download.packages.unity.com/com.unity.2d.tilemap.extras/-/com.unity.2d.tilemap.extras-1.5.0-preview.tgz"}}},"time":{"4.2.1":"2024-12-18T12:41:51.473Z","4.1.0":"2024-10-25T09:38:32.622Z","2.2.8":"2024-10-21T11:27:35.092Z","3.1.3":"2024-10-17T14:08:44.598Z","3.1.2":"2023-10-05T07:23:09.000Z","2.2.7":"2023-09-28T12:27:09.000Z","4.0.2":"2023-09-04T14:28:19.000Z","2.2.6":"2023-06-27T14:23:04.000Z","3.1.1":"2023-06-27T14:22:04.000Z","4.0.1":"2023-05-22T13:28:58.000Z","3.1.0":"2023-03-21T15:45:59.000Z","4.0.0":"2023-03-20T09:36:33.000Z","2.2.5":"2023-03-10T10:18:35.000Z","4.0.0-pre.3":"2023-03-06T10:04:08.000Z","2.2.4":"2022-12-16T11:58:59.000Z","3.0.3":"2022-12-16T01:44:39.000Z","4.0.0-pre.2":"2022-12-12T10:19:40.000Z","1.8.4-preview":"2022-11-17T05:40:34.000Z","4.0.0-pre.1":"2022-10-31T10:06:11.000Z","2.2.3":"2022-05-27T20:03:08.000Z","3.0.2":"2022-04-26T08:40:57.000Z","2.2.2":"2022-04-20T16:41:38.000Z","1.8.3-preview":"2022-04-14T05:52:19.000Z","1.8.2-preview":"2022-04-05T03:34:18.000Z","3.0.1":"2022-03-30T23:04:04.000Z","3.0.0":"2021-10-25T17:45:32.000Z","2.2.1":"2021-10-05T14:38:34.000Z","1.8.1-preview":"2021-09-22T09:34:32.000Z","2.2.0":"2021-07-30T08:22:31.000Z","1.8.0-preview":"2021-06-14T09:25:53.000Z","1.7.0-preview":"2021-05-11T10:46:55.000Z","2.0.0":"2021-03-29T18:36:11.000Z","1.6.0-preview.1":"2021-03-22T10:29:39.000Z","1.6.4-preview":"2021-03-15T05:15:10.000Z","2.0.0-pre.2":"2021-01-26T14:34:38.000Z","1.6.3-preview":"2021-01-26T08:15:28.000Z","2.0.0-pre.1":"2020-11-13T18:35:13.000Z","1.6.2-preview":"2020-11-03T14:11:08.000Z","1.6.1-preview":"2020-08-31T14:21:04.000Z","1.5.0-preview":"2020-05-20T19:58:37.000Z"},"dist-tags":{"latest":"4.2.1"},"etag":"\"27823-Gt/3pVlJjlHet8/dGfXGKop4S3c\""}