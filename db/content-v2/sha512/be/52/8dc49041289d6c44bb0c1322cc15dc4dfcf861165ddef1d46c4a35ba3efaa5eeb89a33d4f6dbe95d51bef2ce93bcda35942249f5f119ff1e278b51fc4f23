{"_id":"com.unity.xr.arfoundation","name":"com.unity.xr.arfoundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","provider":"upm","versions":{"6.1.0":{"_upm":{"changelog":"### Added\n\n- Added `ValidationFailure` as an option to [XRResultStatus.StatusCode](xref:UnityEngine.XR.ARSubsystems.XRResultStatus.StatusCode).\n- Added support for soft occlusion. Refer to the [AR Foundation Samples](https://github.com/Unity-Technologies/arfoundation-samples/tree/main) GitHub repository for example usage in the `MetaOcclusion` scene.\n  - Added a soft occlusion preprocessing shader at `Assets/Shaders/SoftOcclusionPreprocessing.shader`.\n  - Added [ARShaderOcclusion.softOcclusionShaderKeyword](xref:UnityEngine.XR.ARFoundation.ARShaderOcclusion.softOcclusionShaderKeyword), [ARShaderOcclusion.ndcLinearConversionParametersPropertyId](xref:UnityEngine.XR.ARFoundation.ARShaderOcclusion.ndcLinearConversionParametersPropertyId), and [AROcclusionShaderMode.SoftOcclusion](xref:UnityEngine.XR.ARFoundation.AROcclusionShaderMode.SoftOcclusion).\n\n### Changed\n\n- Changed the behavior of `XRAnchorSubsystem` so that if you call `GetChanges` while the subsystem is stopped, it will no longer throw an `InvalidOperationException`. It is valid to call `GetChanges` while the subsystem is stopped to retrieve information about anchors that were in the middle of an asynchronous operation at the moment when the subsystem was stopped.\n- Changed the following subsytems so that they validate correct life cycle behavior of trackables when your app is built as a Development Build or run in the Editor: `XREnvironmentProbeSubsystem`, `XRHumanBodySubsystem`, `XRPointCloudSubsystem`, `XRRaycastSubsystem`. All other tracking subsystems already perform validation in this way, so this change makes them all consistent.\n\n### Removed\n\n- Removed the pre-release API `ARShaderOcclusion.environmentDepthNearFarPlanePropertyId` and replaced it with `ARShaderOcclusion.ndcLinearConversionParametersPropertyId`.\n\n### Fixed\n\n- Fixed `XRFaceSubsystem` so that it no longer creates duplicate profiler markers for its `GetChanges` implementation.\n- Fixed the AR Environment Probe Manager component so that it can no longer throw an `InvalidOperationException` when you unload a scene containing one or more environment probes. ([ARFB-521](https://issuetracker.unity3d.com/product/unity/issues/guid/ARFB-521))\n- Fixed the `ARAnchor` component so that if it fails to add itself as an anchor with the anchor subsystem, the component disables itself instead of deactivating its GameObject."},"unity":"6000.0","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.1.0","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.5.1","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"238c430a597649b82e264a638f05cac105c9425c","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.1.0.tgz"}},"5.1.6":{"_upm":{"changelog":"### Fixed\n\n- Fixed the `SimulationRaycastSubsystem` to correctly state via `XRRaycastSubsystemDescriptor.supportedTrackableTypes` that casting rays against planes is supported in XR Simulation.\n- Fixed the `SimulationSessionSubsystem` so it doesn't log an error if you call `ARSession.Reset` before the session is initialized.\n- Fixed the XR Simulation point clouds implementation so that it no longer logs an error when the AR Point Cloud Manager component is disabled and then re-enabled. ([ARFB-487](https://issuetracker.unity3d.com/product/unity/issues/guid/ARFB-487))\n- Fixed the `SimulationEnvironmentProbeSubsystem` so that [automatic placement](xref:arfoundation-environment-probes#automatic-placement) of environment probes can be enabled or disabled, as is possible on other AR platforms.\n- Fixed the AR Environment Probe Manager component so that it can no longer throw an `ArgumentNullException` when you unload a scene containing one or more environment probes.\n- Fixed the AR Environment Probe Manager component so that it can no longer throw an `InvalidOperationException` when you unload a scene containing one or more environment probes. ([ARFB-521](https://issuetracker.unity3d.com/product/unity/issues/guid/ARFB-521))\n- Fixed `XRFaceSubsystem` so that it no longer creates duplicate profiler markers for its `GetChanges` implementation."},"unity":"2021.2","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.6","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"f442ec1f087dce9e8aa028a4d32bf9554da96b6c","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.6.tgz"}},"6.1.0-pre.5":{"_upm":{"changelog":"### Fixed\n\n- Fixed the `SimulationEnvironmentProbeSubsystem` so that [automatic placement](xref:arfoundation-environment-probes#automatic-placement) of environment probes can be enabled or disabled, as is possible on other AR platforms.\n- Fixed the AR Environment Probe Manager component so that it can no longer throw an `ArgumentNullException` when you unload a scene containing one or more environment probes."},"unity":"6000.0","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.1.0-pre.5","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.5.1","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"fccde17d0cf3c81dc91e24e0a44491ab14859d9e","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.1.0-pre.5.tgz"}},"6.0.5":{"_upm":{"changelog":"### Fixed\n\n- Fixed the `SimulationEnvironmentProbeSubsystem` so that [automatic placement](xref:arfoundation-environment-probes#automatic-placement) of environment probes can be enabled or disabled, as is possible on other AR platforms.\n- Fixed the AR Environment Probe Manager component so that it can no longer throw an `ArgumentNullException` when you unload a scene containing one or more environment probes."},"unity":"6000.0","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.5","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"b18f5959dab1098961480eeff6b97f7b68c2bc8c","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.5.tgz"}},"6.1.0-pre.4":{"_upm":{"changelog":"### Added\n\n- Added camera torch mode support to XR Simulation.\n- Added APIs for batch save, load, and erase of persistent anchors. Refer to [Persistent anchors](xref:arfoundation-anchors-persistent) for more information.\n- Added [XROcclusionSubsystem.TryGetSwapchainTextureDescriptors](xref:UnityEngine.XR.ARSubsystems.TryGetSwapchainTextureDescriptors*), which allows AR Foundation to make optimizations for occlusion providers that store textures in fixed-length swapchains.\n- Added overrides for `object.ToString` to the following types for an improved debugging experience:\n  - [ARExternalTexture](xref:UnityEngine.XR.ARFoundation.ARExternalTexture)\n  - [XRFov](xref:UnityEngine.XR.ARSubsystems.XRFov)\n  - [XRNearFarPlanes](xref:UnityEngine.XR.ARSubsystems.XRNearFarPlanes)\n- Added a constructor to [XRTextureDescriptor](xref:UnityEngine.XR.ARSubsystems.XRTextureDescriptor) that allows you to create an instance with only the property name ID field set.\n- Added a new struct [XRShaderKeywords](xref:UnityEngine.XR.ARSubsystems.XRShaderKeywords) to replace the `ShaderKeywords` struct. `ShaderKeywords` was introduced to make shader keywords read-only, but its collection enumerators perform boxing operations. `XRShaderKeywords` does not allocate memory on the heap when enumerated.\n  - Added support for the `XRShaderKeywords` struct to the XR Simulation camera and occlusion providers.\n- Added a new value to [XRResultStatus](xref:UnityEngine.XR.ARSubsystems.XRResultStatus): `ProviderNotStarted`.\n- Added a new enum [AROcclusionShaderMode](xref:UnityEngine.XR.ARFoundation.AROcclusionShaderMode) and property [ARShaderOcclusion.occlusionShaderMode](xref:UnityEngine.XR.ARFoundation.ARShaderOcclusion.occlusionShaderMode) to enable or disable hard occlusion.\n- Added the following properties to the AR Shader Occlusion component:\n  - `hardOcclusionShaderKeyword`\n  - `environmentDepthProjectionMatricesPropertyId`\n  - `environmentDepthNearFarPlanesPropertyId`\n- Added two new values to the [XRTextureType](xref:UnityEngine.XR.ARSubsystems.XRTextureType) enum: `ColorRenderTextureRef` and `DepthRenderTextureRef`, and updated the `IsRenderTexture` extension method to include these types.\n\n### Changed\n\n- Changed the [AR Occlusion Manager component](xref:arfoundation-occlusion-manager) to add `[RequireComponent(typeof(Camera))]`. Previously, it was logically required that this component was on the same GameObject as your XR Origin's Camera, but this wasn't as clearly enforced.\n- Changed the timing of `AROcclusionManager.frameReceived` so that this event is now invoked during `Application.onBeforeRender` instead of `MonoBehaviour.Update`. This change is required for compatibility with head-mounted-display (HMD) providers, and may result in improved precision of occlusion frames.\n- Changed the [AR Shader Occlusion component](xref:arfoundation-shader-occlusion) to construct view-projection matrices using poses reported by `AROcclusionFrameEventArgs` instead of getting the XR camera's `WorldToCameraMatrix`.\n- Changed the default implementation of the pre-release API `XROcclusionSubsystem.TryGetFrame` to return `true`. As an additive API in AR Foundation 6.1, this method must succeed for providers that don't override it.\n- Renamed the pre-release type `ARGpuTexture` to `ARExternalTexture`, and added support for the `IEquatable<ARExternalTexture>` interface.\n- Changed the XR Simulation Environments version imported by the XR Environment Overlay from 2.0.1 to 2.1.1\n- Changed the dependency version of XR Core Utilities from 2.4.0 to 2.5.1.\n\n### Deprecated\n\n- Deprecated and replaced the following APIs:\n  - `ShaderKeywords` to `XRShaderKeywords`\n  - `XRCameraSubsystem.GetShaderKeywords` to `XRCameraSubsystem.GetShaderKeywords2`\n  - `XRCameraSubsystem.Provider.GetShaderKeywords` to `XRCameraSubsystem.Provider.GetShaderKeywords2`\n  - `XROcclusionSubsystem.GetShaderKeywords` to `XROcclusionSubsystem.GetShaderKeywords2`\n  - `XROcclusionSubsystem.Provider.GetShaderKeywords` to `XROcclusinSubsystem.Provider.GetShaderKeywords2`\n  - `ARCameraFrameEventArgs.disabledShaderK"},"unity":"6000.0","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.1.0-pre.4","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.5.1","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"34c48f007ae034af222cee60268f103a48204dd4","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.1.0-pre.4.tgz"}},"6.0.4":{"_upm":{"changelog":"### Fixed\n\n- Fixed XR Simulation occlusion on Apple silicon Macs so that occlusion now renders correctly regardless of whether URP Render Graph is enabled or disabled.\n- Fixed the XR Simulation point clouds implementation so that it no longer logs an error when the AR Point Cloud Manager component is disabled and then re-enabled. ([ARFB-487](https://issuetracker.unity3d.com/product/unity/issues/guid/ARFB-487))"},"unity":"6000.0","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.4","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"270b620ab8d6366a5a8ae581feb4fbab986e3ff7","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.4.tgz"}},"6.1.0-pre.3":{"_upm":{"changelog":"### Added\n\n- Added `StatusCode.ProviderUninitialized` as an error code to represent an uninitialized state. Methods that return [XRResultStatus](xref:UnityEngine.XR.ARSubsystems.XRResultStatus) can use this more specific error code instead of `StatusCode.UnknownError` when the provider is uninitialized.\n- Added [SupportedUtils](xref:UnityEngine.XR.ARSubsystems.SupportedUtils) for easier conversion between the types `Supported` and `bool`.\n- Added an API that allows you to turn on the device's camera torch (flash). Refer to [Camera torch mode (flash)](xref:arfoundation-camera-torch-mode) for more information\n- Added support for stereo occlusion, enabling HMD providers to implement the XR occlusion subsystem:\n  - Added [XRTextureType](xref:UnityEngine.XR.ARSubsystems.XRTextureType) enum with extension methods to convert from [TextureDimension](xref:UnityEngine.Rendering.TextureDimension).\n  - Added [XRTextureDescriptor.textureType](xref:UnityEngine.XR.ARSubsystems.XRTextureDescriptor.textureType) property to get a texture descriptor's type.\n  - Added the following structs to represent data used for occlusion: [XRFov](xref:UnityEngine.XR.ARSubsystems.XRFov), [XRNearFarPlanes](xref:UnityEngine.XR.ARSubsystems.XRNearFarPlanes), [XROcclusionFrame](xref:UnityEngine.XR.ARSubsystems.XROcclusionFrame), and [ARGpuTexture](xref:UnityEngine.XR.ARFoundation.ARGpuTexture).\n  - Added the following members to [XROcclusionSubsystem](xref:UnityEngine.XR.ARSubsystems.XROcclusionSubsystem): `depthViewProjectionMatricesPropertyId` and `TryGetFrame(Allocator, out XROcclusionFrame)`.\n  - Added more data to [AROcclusionFrameEventArgs](xref:UnityEngine.XR.ARFoundation.AROcclusionFrameEventArgs).\n  - Added the [ARShaderOcclusion](xref:arfoundation-shader-occlusion) component to write depth textures to global shader memory.\n\n### Changed\n\n- Changed the type of `XRResultStatus` from `struct` to `readonly struct`.\n- Changed the Simulation Environment to be visibile in the scene hierarchy.\n\n### Deprecated\n\n- Deprecated and replaced the following APIs:\n  - `XRTextureDescriptor.dimension` to `XRTextureDescriptor.textureType`\n  - `XRTextureDescriptor` constructor with `dimension` parameter to `XRTextureType` parameter.\n  - `AROcclusionFrameEventArgs.propertyNameIds` to `AROcclusionFrameEventArgs.gpuTextures`.\n  - `AROcclusionFrameEventArgs.textures` to `AROcclusionFrameEventArgs.gpuTextures`.\n  - `AROcclusionManager.environmentDepthConfidenceTexture` to `AROcclusionManager.TryGetEnvironmentDepthConfidenceTexture`.\n  - `AROcclusionManager.environmentDepthTexture` to `AROcclusionManager.TryGetEnvironmentDepthTexture`.\n\n### Fixed\n\n- Fixed XR Simulation occlusion on Apple silicon Macs so that occlusion now renders correctly regardless of whether URP Render Graph is enabled or disabled. (The previous fix for this issue in 6.1.0-pre.1 was later determined to be insufficient.)\n- Fixed the XR Simulation point clouds implementation so that it no longer logs an error when the AR Point Cloud Manager component is disabled and then re-enabled. ([ARFB-487](https://issuetracker.unity3d.com/product/unity/issues/guid/ARFB-487))"},"unity":"6000.0","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.1.0-pre.3","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"ccef589ded124ab62cb19709baab3d8694bb7031","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.1.0-pre.3.tgz"}},"6.1.0-pre.2":{"_upm":{"changelog":"### Added\n\n- Added enum `ARDebugMenu.DebugMenuRenderMode` and property `ARDebugMenu.debugMenuMode` that allows you to specify the render mode of the menu's canvas."},"unity":"6000.0","documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.1.0-pre.2","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"0fed115982f130cbb4ca7e7468192e583f7ee18c","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.1.0-pre.2.tgz"}},"6.1.0-pre.1":{"_upm":{"changelog":"### Added\n\n- Added an **XR/AR Foundation** section to the **Component** menu to make it easier to add AR Foundation components to a GameObject.\n- Added a project validation rule to validate **Script Compilation During Play** setting for XR simulation.\n- Added support for simulated bounding box detection to XR Environment via the [SimulatedBoundingBox](xref:UnityEngine.XR.Simulation.SimulatedBoundingBox) component.\n- Added three new APIs to the `XRSessionSubsystem` and provider class which can be extended by AR session providers to handle Universal Render Pipeline rendering events signaled by the `ARCommandBufferSupportRendererFeature` when it is included in the renderer features list for the `Universal Renderer` asset.\n  - [XRSessionSubsystem.requiresCommandBuffer](xref:UnityEngine.XR.ARSubsystems.XRSessionSubsystem.requiresCommandBuffer*)\n  - [XRSessionSubsystem.OnCommandBufferSupportEnabled](xref:UnityEngine.XR.ARSubsystems.XRSessionSubsystem.OnCommandBufferSupportEnabled*)\n  - [XRSessionSubsystem.OnCommandBufferExecute](xref:UnityEngine.XR.ARSubsystems.XRSessionSubsystem.OnCommandBufferExecute*)\n- Added a new `ARCommandBufferSupportRendererFeature` which calls the newly exposed `XRSessionSubsystem` APIs for integration into **Universal Render Pipeline** command buffer execution.\n- Changed documentation for Universal Render Pipeline setup to indicate that the `ARCommandBufferSupportRendererFeature` is required when using the Vulkan Graphics API.\n\n### Changed\n\n- Updated documentation to reflect that the Apple visionOS XR Plug-in now supports AR Foundation 6.\n- Changed: Removed a 1mm depth offset from `DepthCopy.shader`. To avoid z-fighting issues with other shaders, use the [Offset](https://docs.unity3d.com/Manual/SL-Offset.html) command instead.\n- Changed [BoundingBoxClassifications](xref:UnityEngine.XR.ARSubsystems.BoundingBoxClassifications) to add additional labels provided by Apple RoomPlan.\n\n### Fixed\n\n- Fixed an issue where the Build AssetBundles window (**Assets** > **AR Foundation** > **Build AssetBundles**) threw a `NullReferenceException` if no AssetBundles were built.\n- Fixed XR Simulation components so they now behave correctly if you disable the **Reload Domain** option in [Configurable Enter Play Mode](https://docs.unity3d.com/Manual/ConfigurableEnterPlayMode.html) settings.\n- Fixed the native XR Simulation Input provider so that it now explicitly sets **Device** mode as its only supported [Tracking Origin Mode](xref:Unity.XR.CoreUtils.XROrigin.TrackingOriginMode). The [XR Origin component](xref:xr-core-utils-xr-origin-reference) will always use **Device** mode as its Tracking Origin Mode and apply the [XROrigin.CameraYOffset](xref:Unity.XR.CoreUtils.XROrigin.CameraYOffset) value.\n- Fixed the `SimulationSessionSubsystem` so it doesn't log an error if you call `ARSession.Reset` before the session is initialized.\n- Fixed the `SimulationRaycastSubsystem` to correctly state via `XRRaycastSubsystemDescriptor.supportedTrackableTypes` that casting rays against planes is supported in XR Simulation.\n- Fixed `SimulatedAnchor` and `SimulatedLight` so it is no longer possible for these components to log a non-deterministic error when you unload an XR Simulation environment.\n- Fixed XR Simulation occlusion on Apple silicon Macs so that occlusion now renders correctly regardless of whether URP Render Graph is enabled or disabled."},"unity":"6000.0","upmCi":{"footprint":"ff3851cc9a978cfb06c336e6870db39ff22863d5"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"6f49d475983b017bc6429dbd543280afd64d1509"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.1.0-pre.1","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"dd32e339ef4002c41965611655e078dd0b4c1eb8","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.1.0-pre.1.tgz"}},"6.0.3":{"_upm":{"changelog":"### Changed\n\n- Updated documentation to reflect that the Apple visionOS XR Plug-in now supports AR Foundation 6.\n\n### Fixed\n\n- Fixed the `SimulationRaycastSubsystem` to correctly state via `XRRaycastSubsystemDescriptor.supportedTrackableTypes` that casting rays against planes is supported in XR Simulation.\n- Fixed the `SimulationSessionSubsystem` so it doesn't log an error if you call `ARSession.Reset` before the session is initialized."},"type":"asset","unity":"6000.0","upmCi":{"footprint":"6b576859e00df79c715422b9c563759f6e3a5740"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"c6a307e1c416028a42136ead52020a78c98c540f"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.3","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"fedd228b66cccf5f6f8be07328d36f248f41e8c7","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.3.tgz"}},"5.1.5":{"_upm":{"changelog":"No changes"},"type":"assets","unity":"2021.2","upmCi":{"footprint":"6e56084f69d258f792fec8b2c8b1f948c21cade0"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"52ff43b68913047c2a4e0ddb5111a68a428287c0"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.5","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"e228576e94b2f77be2c18a9a4a3c97b06356a2f4","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.5.tgz"}},"6.0.2":{"_upm":{"changelog":"### Fixed\n\n- Fixed an issue where the Build AssetBundles window (**Assets** > **AR Foundation** > **Build AssetBundles**) threw a `NullReferenceException` if no AssetBundles were built.\n- Fixed an issue where XR Simulation's `CameraTextureProvider` component could throw a `MissingReferenceException` when an AR scene is unloaded.\n- Fixed XR Simulation components so they now behave correctly if you disable the **Reload Domain** option in [Configurable Enter Play Mode](https://docs.unity3d.com/Manual/ConfigurableEnterPlayMode.html) settings.\n- Fixed the native XR Simulation Input provider so that it now explicitly sets **Device** mode as its only supported [Tracking Origin Mode](xref:Unity.XR.CoreUtils.XROrigin.TrackingOriginMode). The [XR Origin component](xref:xr-core-utils-xr-origin-reference) will always use **Device** mode as its Tracking Origin Mode and apply the [XROrigin.CameraYOffset](xref:Unity.XR.CoreUtils.XROrigin.CameraYOffset) value."},"type":"assets","unity":"6000.0","upmCi":{"footprint":"e309f4e230fb04c892a30a0e3f6c3163c645b6fc"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"03bcccd104761b6777cf28a41bd02d3a1966ea20"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.2","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"eae77d81bd66871e38dd25265bd47c20fe6d37c9","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.2.tgz"}},"5.1.4":{"_upm":{"changelog":"### Fixed\n\n- Fixed an issue where the AR Debug Menu script would not spawn a Point Cloud prefab.\n- Fixed an issue where the tvOS build target would have compile errors in `Simulation.InputLayoutLoader`.\n- Fixed [issue ARFB-421](https://issuetracker.unity3d.com/product/unity/issues/guid/ARFB-421) which caused `ARMeshManager` to crash the Editor in XR Simulation when its **Normals** property was not enabled.\n- Fixed an issue where XR Simulation camera pose data could leak between multiple AR sessions."},"type":"assets","unity":"2021.2","upmCi":{"footprint":"755f9a1f911795557167e2c7efcfc7ead74ee34b"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"17e0eb6efa2c4360e6ea85191696374b4405f5f8"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.4","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"28c411b86caa2093a56e0cb548eef67652eec64a","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.4.tgz"}},"6.0.1":{"_upm":{"changelog":"### Added\n\n- Added AR Foundation API definitions for persistent anchors. Provider plug-ins can implement these methods, which allow you to save anchors during an AR session and re-load them during subsequent sessions:\n  - [ARAnchorManager.TrySaveAnchorAsync](xref:UnityEngine.XR.ARFoundation.ARAnchorManager.TrySaveAnchorAsync(UnityEngine.XR.ARSubsystems.TrackableId,System.Threading.CancellationToken))\n  - [ARAnchorManager.TryLoadAnchorAsync](xref:UnityEngine.XR.ARFoundation.ARAnchorManager.TryLoadAnchorAsync(UnityEngine.XR.ARSubsystems.SerializableGuid,System.Threading.CancellationToken))\n  - [ARAnchorManager.TryEraseAnchorAsync](xref:UnityEngine.XR.ARFoundation.ARAnchorManager.TryEraseAnchorAsync(UnityEngine.XR.ARSubsystems.SerializableGuid,System.Threading.CancellationToken))\n  - [ARAnchorManager.TryGetSavedAnchorIdsAsync](xref:UnityEngine.XR.ARFoundation.ARAnchorManager.TryGetSavedAnchorIdsAsync(Unity.Collections.Allocator,System.Threading.CancellationToken))\n- Added an implicit conversion operator between [TrackableId](xref:UnityEngine.XR.ARSubsystems.TrackableId) and [SerializableGuid](xref:UnityEngine.XR.ARSubsystems.SerializableGuid).\n- Added a constructor to [SerializableGuid](xref:UnityEngine.XR.ARSubsystems.SerializableGuid) allowing the creation of `SerializableGuid`s with a `System.Guid`.\n- Added [ARAnchorManager.TryRemoveAnchor](xref:UnityEngine.XR.ARFoundation.TryRemoveAnchor) API for removing anchors. You can either use this new method or disable the `ARAnchor` component to remove an anchor.\n- Added XR Simulation's `SimulationCameraPoseProvider` as a public component.\n\n### Changed\n\n- Changed documentation to indicate that Meshing is now a supported feature in the Unity OpenXR: Meta provider plug-in.\n- Changed the behavior of `ARMeshManager` to recalculate normals on a mesh if normals were requested and the provider did not calculate them.\n- Changed the minimum Unity version from 2023.3 to 6000.0, reflecting the new version number of Unity 6. Refer to the official [Unity 6 New Naming Convention](https://forum.unity.com/threads/unity-6-new-naming-convention.1558592/) announcement for more information.\n\n### Fixed\n\n- Fixed [issue ARFB-421](https://issuetracker.unity3d.com/product/unity/issues/guid/ARFB-421) which caused `ARMeshManager` to crash the Editor in XR Simulation when its **Normals** property was not enabled.\n- Fixed [issue ARFB-380](https://issuetracker.unity3d.com/issues/android-elements-of-ui-toolkit-arent-displayed-when-ar-foundation-camera-facing-direction-is-set-to-user) where UI toolkit elements disappeared after one frame when running an XR scene with a user-facing camera on Android devices.\n- Fixed an issue where disabling the `AROcclusionManager` component in XR Simulation would not stop the simulation background shader from sampling the depth texture.\n- Fixed an issue where XR Simulation camera pose data could leak between multiple AR sessions.\n- Corrected a previous fix for an issue where the tvOS build target would have compile errors in `Simulation.InputLayoutLoader`."},"type":"assets","unity":"6000.0","upmCi":{"footprint":"5a07874215cc3facef92d641a1137f74516eb4a4"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"ab1d4a9449006f78f8ac4b3cd32ab363fbd763c3"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.1","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"4386e9f1e35d046faf3aaa2107ba7fc2c1103c0b","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.1.tgz"}},"5.1.3":{"_upm":{"changelog":"### Fixed\n\n- Fixed an issue where destroying and recreating the `SimulationSessionSubsystem` could result in the creation of a `SimulationMeshSubsystem` instance, even if the `XRLoader` did not initially create it.\n- Fixed an issue where the TvOS build target would have compile errors in `Simulation.InputLayoutLoader`."},"type":"assets","unity":"2021.2","upmCi":{"footprint":"d13f49679a7eb94d561971a02d69fce6f63346bb"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"c3f7a8160ce1b8e2200765cc03caf0e0f1e29226"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.3","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"65486b71d76274a2acebc4bc2b6d414931e8bb37","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.3.tgz"}},"6.0.0-pre.8":{"_upm":{"changelog":"### Changed\n\n- Rebuilt simulation plugin for linux on Ubuntu 20.04 (glibc-2.31).\n\n### Fixed\n\n- Fixed an issue where the AR Debug Menu script would not spawn a Point Cloud prefab."},"type":"assets","unity":"2023.3","upmCi":{"footprint":"368703e2b9f671c89b7558904bba5ff56d968bca"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"5114dc3da5fd97fe3fc289900d3d7333d8f21762"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.0-pre.8","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"d54fbacade8eeea834325e72a12747ca4aa7faf7","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.0-pre.8.tgz"}},"6.0.0-pre.7":{"_upm":{"changelog":"### Added\n\n- Added an API for provider plug-ins to implement the detection and tracking of 3D bounding boxes. Refer to [Bounding box detection](xref:arfoundation-bounding-box-detection) for more information.\n\n### Changed\n\n- Changed [XRResultStatus](xref:UnityEngine.XR.ARSubsystems.XRResultStatus) to more easily allow for a wide range of platforms to use the type:\n  - Renamed the `value` property to `nativeStatusCode`.\n  - Added a cross-platform `statusCode` property and corresponding constructors.\n  - Removed the implicit conversion operators between `int` and `XRResultStatus`. Use a constructor instead.\n\n### Fixed\n\n- Fixed an issue where destroying and recreating the `SimulationSessionSubsystem` could result in the creation of a `SimulationMeshSubsystem` instance, even if the `XRLoader` did not initially create it.\n- Fixed an issue where the TvOS build target would have compile errors in `Simulation.InputLayoutLoader`."},"type":"assets","unity":"2023.3","upmCi":{"footprint":"1883ef626f770545d55b5de46bfd8c4d0be7d70d"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"1e2168bb454e00d591e973a00d9a6559eb77590e"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.0-pre.7","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"e7b2a4fe45c8e07711a1ad49dbf8ede0164f5bb9","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.0-pre.7.tgz"}},"6.0.0-pre.6":{"_upm":{"changelog":"### Added\n\n- Added [XRResultStatus](xref:UnityEngine.XR.ARSubsystems.XRResultStatus), a new way for AR Foundation to provide status information for completed operations. Provider plug-ins can add extension methods to this type to give users access to platform-specific error codes and success codes.\n\n### Changed\n\n- Changed `SimulationPlaneSubsystem` to respect the currently set `PlaneDetectionMode`, detecting updates only from planes that match the current mode.\n- Upgraded `com.unity.xr.core-utils` dependency version from `2.2.3` to `2.3.0`.\n- Changed [ARTrackablesChangedEventArgs\\<TTrackable\\>](xref:UnityEngine.XR.ARFoundation.ARTrackablesChangedEventArgs`1):\n  - `added`, `updated`, and `removed` now return [ReadOnlyList](xref:Unity.XR.CoreUtils.Collections.ReadOnlyList`1) instead of `IReadOnlyCollection`, removing an unnecessary heap allocation when each collection is enumerated.\n  - `removed` now uses `KeyValuePair<TrackableId, TTrackable>` instead of `TTrackable`, allowing `ARTrackableManager` to send notifications of removed trackables even if you already destroyed them (for example, by destroying an `ARAnchor`).\n- Changed [Result\\<T\\>](xref:UnityEngine.XR.ARSubsystems.Result`1):\n  - Removed `bool TryGetResult(out T)` and the constructor that took `(bool, T)` as parameters.\n  - Added `status`, `value`, and a constructor that takes `(XRResultStatus, T)` as parameters.\n- Updated Universal Render Pipeline documentation to reflect recent changes to URP concepts and setup.\n- Changed minimum Unity Editor version to `2023.3`.\n\n### Fixed\n\n- Fixed an issue where calling `ARSession.Reset` could cause XR Simulation plane detection to fail to discover planes for a period of time before resuming.\n- Fixed an issue where the `SimulationEnvironmentProbeSubsystem` could destroy environment probe GameObjects when they were removed, even if their **Destroy on Removal** property was set to false.\n- Fixed an issue where `EditorAnalytics` would throw obsolete warnings during project import in Unity 2023.2 or newer.\n- Fixed an issue in XR Simulation where a command buffer for the Built-in Render Pipeline was added to a camera even when URP was active."},"type":"assets","unity":"2023.3","upmCi":{"footprint":"aee38bc714eb74a6db8616f776306fd1f57b1612"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"0722154ddda749e748b2afe75edeaf21515c3808"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.0-pre.6","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.3.0","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"bda09c105362b500907ce0efa32b9d8874da2645","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.0-pre.6.tgz"}},"5.1.2":{"_upm":{"changelog":"### Changed\n\n- Changed the [Use reference image libraries with AssetBundles](xref:arfoundation-image-tracking#use-reference-image-libraries-with-assetbundles) section of the Image tracking documentation to mention that `ARBuildProcessor.PreprocessBuild` must be called before building AssetBundles.\n- Changed the [Plane detection](xref:arfoundation-plane-detection) documentation to contain more information and better organization.\n- Changed the AR Foundation documentation [manual](xref:arfoundation-manual) to include platform support information for Apple visionOS.\n\n### Fixed\n\n- Fixed issue in XR Simulation where a warning was logged stating that saving had no effect because of a missing FilePathAttribute.\n- Fixed an issue where `SimulatedAnchor` components could incorrectly affect XR Simulation when used in scenes other than the XR simulation environment.\n- Fixed an issue where disabling and re-enabling the [ARDebugMenu](xref:arfoundation-debug-menu) component would cause the origin toggle to become unresponsive.\n- Fixed an issue where `SimulationPlaneSubsystem` would not respect the currently set `PlaneDetectionMode`, detecting updates only from planes that match the current mode.\n- Fixed an issue where calling `ARSession.Reset` could cause XR Simulation plane detection to fail to discover planes for a period of time before resuming."},"type":"assets","unity":"2021.2","upmCi":{"footprint":"351293db733eff8c5115d2c94b2f958fa83ad616"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"2a2d7e68e9dbb44480d9eb6ad93001c401bbca01"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.2","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"b2e35655bb020a2ba6e6d2a1ff6f7b330f1c6692","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.2.tgz"}},"4.2.10":{"_upm":{"changelog":"### Changed\n\n- Changed the [Use reference image libraries with AssetBundles](xref:arfoundation-image-tracking#use-reference-image-libraries-with-assetbundles) section of the Image tracking documentation to mention that `ARBuildProcessor.PreprocessBuild` must be called before building AssetBundles.\n- Changed the AR Subsystems dependency version from 4.2.9 to 4.2.10."},"type":"assets","unity":"2020.3","upmCi":{"footprint":"346f06bf1d07edeeb452e4df643ed9e619b8f882"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"e9e2efe902fc394d3819244ecff203834e95dcc9"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@4.2/manual/index.html","name":"com.unity.xr.arfoundation","version":"4.2.10","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.10","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"32dee3d8674a56e2d19fcc72749030cb2f8443db","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.10.tgz"}},"6.0.0-pre.5":{"_upm":{"changelog":"### Added\n\n- Added new API to make it possible for XR Simulation to identify images even if **Keep Texture at Runtime** is disabled in the reference image library:\n  - Added [SimulatedTrackedImage.imageAssetGuid](xref:UnityEngine.XR.Simulation.SimulatedTrackedImage.imageAssetGuid)\n- Added an editor window in **Assets** > **AR Foundation** > **Build AssetBundles** that you can use to build AssetBundles containing [XRReferenceImageLibrary](xref:UnityEngine.XR.ARSubsystems.XRReferenceImageLibrary) objects.\n- Added new versions of these Visual Scripting nodes, based on the new `ARTrackableManager.trackablesChanged` event:\n  - `OnAnchorsChanged`\n  - `OnEnvironmentProbesChanged`\n  - `OnFacesChanged`\n  - `OnHumanBodiesChanged`\n  - `OnParticipantsChanged`\n  - `OnPlanesChanged`\n  - `OnPointCloudsChanged`\n  - `OnTrackedImagesChanged`\n  - `OnTrackedObjectsChanged`\n- Added new API [ARPlaneMeshGenerator.TryGenerateMesh](xref:UnityEngine.XR.ARFoundation.ARPlaneMeshGenerator.TryGenerateMesh) to support generating meshes of simple polygons, i.e. concave and convex polygons.\n- Added documentation:\n  - Added [Display matrix format and derivation](xref:arfoundation-display-matrix-format-and-derivation) manual page.\n  - Added [Custom background shaders](xref:arfoundation-custom-background-shaders) manual page.\n- Added [SimulatedTrackedImage](xref:arfoundation-simulation-environments#simulated-tracked-image-component) as a public class. This class has been present since AR Foundation 5.0, but previously was not public.\n- Added settings in the XR Simulation Preferences window for configuring navigation `InputAction`s and navigation speed.\n\n### Changed\n\n- Changed the [Use reference image libraries with AssetBundles](xref:arfoundation-image-tracking#use-reference-image-libraries-with-assetbundles) section of the Image tracking documentation to mention that `ARBuildProcessor.PreprocessBuild` must be called before building AssetBundles.\n- Changed the location of the **Refresh XR Environment List** menu item from **Assets** to **Assets** > **AR Foundation**.\n- Changed the materials \"Debug Face\" and \"Debug Plane\" to be compatible with URP by changing them to the 'Simulation/StandardLit' shader instead of the unity standard shader.\n- Changed the XR Simulation Environments version imported by the XR Environment Overlay from 1.0.0 to 2.0.1.\n- Changed the [Plane detection](xref:arfoundation-plane-detection) documentation to contain more information and better organization.\n- Changed the `SimulatedLight` component to disallow multiple copies of the component on the same GameObject, which would result in incorrect light estimation.\n- Changed XR Simulation navigation controls to be bound to configurable `InputAction`s instead of hard-coded to WASD keys.\n\n### Deprecated\n\n- [ARPlaneMeshGenerators](xref:UnityEngine.XR.ARFoundation.ARPlaneMeshGenerators)\n  - [ARPlaneMeshGenerators.GenerateMesh](xref:UnityEngine.XR.ARFoundation.ARPlaneMeshGenerators.GenerateMesh)\n  - [ARPlaneMeshGenerators.GenerateUvs](xref:UnityEngine.XR.ARFoundation.ARPlaneMeshGenerators.GenerateUvs)\n  - [ARPlaneMeshGenerators.GenerateIndices](xref:UnityEngine.XR.ARFoundation.ARPlaneMeshGenerators.GenerateIndices)\n\n### Removed\n\n- Removed semantic labels from [PlaneClassifications](xref:UnityEngine.XR.ARSubsystems.PlaneClassifications) that describe 3D volumes.\n- Removed the \"Version History\" documentation section, which contained upgrade guides for previous versions of AR Foundation. To access upgrade guides for previous AR Foundation versions, refer to the respective documentation versions.\n- Removed **Enable Navigation** setting from XR Simulation Preferences window. Navigation controls can now be disabled by clearing the **Navigation Input Action References** settings in the same window.\n\n### Fixed\n\n- Fixed an issue in XR Simulation where a warning was logged stating that saving had no effect because of a missing FilePathAttribute.\n- Fixed an issue in XR Simulation where if the AR Occlusion Manager component was disabled at the start of a scene, occlusion would not work correctly if you later enabled the component.\n- Fixed an issue where the [ARTrackableManager.trackablesChanged](xref:UnityEngine.XR.ARFoundation.ARTrackableManager.trackablesChanged) event was initialized to `null`.\n- Fixed an issue where `SimulatedAnchor` components could incorrectly affect XR Simulation when used in scenes other than the XR simulation environment."},"type":"assets","unity":"2023.2","upmCi":{"footprint":"1de483abf82ba48e6e1abd80957c1df4632a3b6d"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"86d3fbedbd67dd223c765aff48040868534367f4"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.0-pre.5","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.2.2","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"5374c57b2983d2ab4ff33e1b4f86bef3e091c9da","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.0-pre.5.tgz"}},"5.1.1":{"_upm":{"changelog":"### Fixed\n\n- Fixed an issue in XR Simulation where disabling and re-enabling the AR Plane Manager component would cause duplicate planes to be detected where planes had already been detected previously.\n- Fixed an issue where disabling and re-enabling the [ARDebugMenu](xref:arfoundation-debug-menu) component would create duplicate trackable visualizers and cause UI buttons to become unresponsive."},"type":"assets","unity":"2021.2","upmCi":{"footprint":"9df0a74ad49e5cab6d62c18133a0858f438c0699"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"af6913d442d5d0033eeab0c524c8261828c03403"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.1","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"f46f121d1a06b16276dca5700a2d192f33278a09","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.1.tgz"}},"6.0.0-pre.4":{"_upm":{"changelog":"### Added\n\n- Added `UnityEvent` [trackablesChanged](xref:UnityEngine.XR.ARFoundation.ARTrackableManager.trackablesChanged) to `ARTrackableManager`.\n- Added struct [ARTrackablesChangedEventArgs](xref:UnityEngine.XR.ARFoundation.ARTrackablesChangedEventArgs) for the `trackablesChanged` event argument.\n\n### Changed\n\n- Changed the [SimulatedTrackedImage](xref:UnityEngine.XR.Simulation.SimulatedTrackedImage) component to render a textured mesh of its image, allowing you to see the image in the Scene view and Game view without requiring additional GameObjects.\n  - Removed now-unnecessary Quad GameObjects from the DefaultSimulationEnvironment.\n- Changed the behavior of `SimulationSessionSubsystem.sessionId` to now return a non-empty unique value when the subsystem is running.\n\n### Deprecated\n\n- Deprecated and replaced the following APIs:\n  - `XRCameraSubsystem.GetMaterialKeywords` to `XRCameraSubsystem.GetShaderKeywords`\n  - `XROcclusionSubsystem.GetMaterialKeywords` to `XROcclusionSubsystem.GetShaderKeywords`\n  - `ARCameraFrameEventArgs.enabledMaterialKeywords` to `ARCameraFrameEventArgs.enabledShaderKeywords`\n  - `ARCameraFrameEventArgs.disabledMaterialKeywords` to `ARCameraFrameEventArgs.disabledShaderKeywords`\n  - `AROcclusionFrameEventArgs.enabledMaterialKeywords` to `AROcclusionFrameEventArgs.enabledShaderKeywords`\n  - `AROcclusionFrameEventArgs.disabledMaterialKeywords` to `AROcclusionFrameEventArgs.disabledShaderKeywords`\n- Deprecated the following APIs:\n  - [ARAnchorManager.anchorsChanged](xref:UnityEngine.XR.ARFoundation.ARAnchorManager.anchorsChanged)\n  - [ARAnchorManager.OnTrackablesChanged](xref:UnityEngine.XR.ARFoundation.ARAnchorManager.OnTrackablesChanged)\n  - [AREnvironmentProbeManager.environmenProbesChanged](xref:UnityEngine.XR.ARFoundation.AREnvironmentProbeManager.environmentProbesChanged)\n  - [AREnvironmentProbeManager.OnTrackablesChanged](xref:UnityEngine.XR.ARFoundation.AREnvironmentProbeManager.OnTrackablesChanged)\n  - [ARFaceManager.facesChanged](xref:UnityEngine.XR.ARFoundation.ARFaceManager.facesChanged)\n  - [ARFaceManager.OnTrackablesChanged](xref:UnityEngine.XR.ARFoundation.ARFaceManager.OnTrackablesChanged)\n  - [ARHumanBodyManager.humanBodiesChanged](xref:UnityEngine.XR.ARFoundation.ARHumanBodyManager.humanBodiesChanged)\n  - [ARHumanBodyManager.OnTrackablesChanged](xref:UnityEngine.XR.ARFoundation.ARHumanBodyManager.OnTrackablesChanged)\n  - [ARParticipantManager.participantsChanged](xref:UnityEngine.XR.ARFoundation.ARParticipantManager.participantsChanged)\n  - [ARParticipantManager.OnTrackablesChanged](xref:UnityEngine.XR.ARFoundation.ARParticipantManager.OnTrackablesChanged)\n  - [ARPlaneManager.planesChanged](xref:UnityEngine.XR.ARFoundation.ARPlaneManager.planesChanged)\n  - [ARPlaneManager.OnTrackablesChanged](xref:UnityEngine.XR.ARFoundation.ARPlaneManager.OnTrackablesChanged)\n  - [ARPointCloudManager.pointCloudsChanged](xref:UnityEngine.XR.ARFoundation.ARPointCloudManager.pointCloudsChanged)\n  - [ARPointCloudManager.OnTrackablesChanged](xref:UnityEngine.XR.ARFoundation.ARPointCloudManager.OnTrackablesChanged)\n  - [ARTrackedImageManager.trackedImagesChanged](xref:UnityEngine.XR.ARFoundation.ARTrackedImageManager.trackedImagesChanged)\n  - [ARTrackedImageManager.OnTrackablesChanged](xref:UnityEngine.XR.ARFoundation.ARTrackedImageManager.OnTrackablesChanged)\n  - [ARTrackedObjectManager.trackedObjectsChanged](xref:UnityEngine.XR.ARFoundation.ARTrackedObjectManager.trackedObjectsChanged)\n  - [ARTrackedObjectManager.OnTrackablesChanged](xref:UnityEngine.XR.ARFoundation.ARTrackedObjectManager.OnTrackablesChanged)\n  - [ARTrackableManager.OnTrackablesChanged](xref:UnityEngine.XR.ARFoundation.ARTrackableManager.OnTrackablesChanged)\n  - [ARPlaneManagerListener](xref:UnityEngine.XR.ARFoundation.ARPlaneManagerListener)\n- Deprecated the following structs:\n  - [ARAnchorsChangedEventArgs](xref:UnityEngine.XR.ARFoundation.ARAnchorsChangedEventArgs)\n  - [AREnvironmentProbesChangedEvent](xref:UnityEngine.XR.ARFoundation.AREnvironmentProbesChangedEvent)\n  - [ARFacesChangedEventArgs](xref:UnityEngine.XR.ARFoundation.ARFacesChangedEventArgs)\n  - [ARHumanBodiesChangedEventArgs](xref:UnityEngine.XR.ARFoundation.ARHumanBodiesChangedEventArgs)\n  - [ARParticipantsChangedEventArgs](xref:UnityEngine.XR.ARFoundation.ARParticipantsChangedEventArgs)\n  - [ARPlanesChangedEventArgs](xref:UnityEngine.XR.ARFoundation.ARPlanesChangedEventArgs)\n  - [ARPointCloudChangedEventArgs](xref:UnityEngine.XR.ARFoundation.ARPointCloudChangedEventArgs)\n  - [ARTrackedImagesChangedEventArgs](xref:UnityEngine.XR.ARFoundation.ARTrackedImagesChangedEventArgs)\n  - [ARTrackedObjectsChangedEventArgs](xref:UnityEngine.XR.ARFoundation.ARTrackedObjectsChangedEventArgs)\n- Deprecated the following Visual Scripting nodes:\n  - `OnAnchorsChanged`\n  - `OnEnvironmentProbesChanged`\n  - `OnFacesChanged`\n  - `OnHumanBodiesChanged`\n  - `OnParticipantsChanged`\n  - `OnPlanesChanged`\n  - `OnPointCloudsChanged`\n  - `OnTrackedImagesChanged`\n  - `OnTrackedObjectsChanged`\n\n### Removed\n\n- Removed an assembly reference from `Unity.XR.ARSubsystems.Editor.asmdef` to an internal assembly that does not exist anymore.\n\n### Fixed\n\n- Fixed an issue where disabling and re-enabling the [ARDebugMenu](xref:arfoundation-debug-menu) component would create duplicate trackable visualizers and cause UI buttons to become unresponsive."},"type":"assets","unity":"2023.2","upmCi":{"footprint":"011c09711e14681f0e81958715866cabef9e0e2a"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"e423e473bfabfe8cbc6c60b3f9a029a6fdfdd144"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.0-pre.4","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.2.2","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"ba7a776f432aa0adcf1b91c77d33bc95997e8c7e","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.0-pre.4.tgz"}},"4.2.9":{"_upm":{"changelog":"### Changed\n\n- Upgraded AR Subsystems dependency version from 4.2.8 to 4.2.9.\n\n### Fixed\n\n- Fixed issue [ARFB-176](https://issuetracker.unity3d.com/issues/ios-arenvironmentprobemanager-dot-ondestroy-triggers-application-crash) where destroying an `AREnvironmentProbe` prior to destroying the `AREnvironmentProbeManager` would cause a crash."},"type":"assets","unity":"2020.3","upmCi":{"footprint":"74ac1e6bfb9ec7c485460247980cc3b131144c3e"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"02114516022b88bbfb56c3f2a6399bdc86280b94"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@4.2/manual/index.html","name":"com.unity.xr.arfoundation","version":"4.2.9","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.9","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"7d9a1e5b477521433cba65fa56a061d82665e7de","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.9.tgz"}},"5.1.0":{"_upm":{"changelog":"No changes"},"type":"assets","unity":"2021.2","upmCi":{"footprint":"cd80c23da2b266a15659633d178defcc793a541c"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"73f49e36b422f20856c71e3466ba7331add35064"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.0","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"79c3dbf7ad20a5427172291260cd3a357ffbe480","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.0.tgz"}},"6.0.0-pre.3":{"_upm":{"changelog":"### Added\n\n- Added [XRObjectTrackingSubsystemDescriptor.Register(XRObjectTrackingSubsystemDescriptor.Cinfo)](xref:UnityEngine.XR.ARSubsystems.XRObjectTrackingSubsystemDescriptor.Register(UnityEngine.XR.ARSubsystems.XRObjectTrackingSubsystemDescriptor.Cinfo)) to replace the deprecated register methods present in `XRObjectTrackingSubsystem`\n- Added [XRParticipantSubsystemDescriptor.Register(XRParticipantSubsystemDescriptor.Cinfo)](UnityEngine.XR.ARSubsystems.XRParticipantSubsystemDescriptor.Register(UnityEngine.XR.ARSubsystems.XRParticipantSubsystemDescriptor.Cinfo)) to replace the deprecated register methods present in `XRParticipantSubsystem`\n- Added support for asynchronous anchor creation. Refer to [What's New](xref:arfoundation-whats-new#asynchronous-tryaddanchor-api) for more information.\n- Added support for Image Stabilization, which helps stabilize shaky video from the camera.\n- Added support for Occlusion to XR Simulation.\n- Added the following subsystem descriptor registration methods for consistency with other subsystem descriptors:\n  - [XRCameraSubsystemDescriptor.Register](xref:UnityEngine.XR.ARSubsystems.XRCameraSubsystemDescriptor.Register)\n  - [XREnvironmentProbeSubsystemDescriptor.Register](xref:UnityEngine.XR.ARSubsystems.XREnvironmentProbeSubsystemDescriptor.Register)\n  - [XRHumanBodySubsystemDescriptor.Register](xref:UnityEngine.XR.ARSubsystems.XRHumanBodySubsystemDescriptor.Register)\n  - [XROcclusionSubsystemDescriptor.Register](xref:UnityEngine.XR.ARSubsystems.XROcclusionSubsystemDescriptor.Register)\n\n### Changed\n\n- Changed [ScheduleAddImageWithValidationJob](xref:UnityEngine.XR.ARFoundation.MutableRuntimeReferenceImageLibraryExtensions.ScheduleAddImageWithValidationJob) to check if the `ARSession.state` has reached the ready state before scheduling the add image operation.\n- Changed `ARTrackable` to now implement the `ITrackable` interface, enabling generic API designs when dealing with trackables.\n- Changed `XRPlaneSubsystem.Provider.requestedPlaneDetectionMode` to `abstract` from `virtual`.\n- Changed `Promise<T>.OnKeepWaiting()` to `virtual` instead of `abstract`.\n- Changed `SubsystemLifecycleManager.GetActiveSubsystemInstance()` to `protected static` from `protected`, as it does not use any instance members of the `SubsystemLifecycleManager` class. \n- Changed the life cycle behavior of [ARAnchor](xref:UnityEngine.XR.ARFoundation.ARAnchor) in the event that adding the anchor to the `XRAnchorSubsystem` failed. Instead of retrying the add operation every frame, the `ARAnchor` component now disables itself after the first failed attempt.\n\n### Deprecated\n\n- Deprecated the structs `XRObjectTrackingSubsystemDescriptor.Capabilities` and `XRParticipantSubsystemDescriptor.Capabilities`.\n- Deprecated the `XRObjectTrackingSubsystemDescriptor.Register` and `XRParticipantSubsystemDescriptor.Register` methods that use the now-deprecated `Capabilities` struct.\n- Deprecated and replaced the following APIs for consistency with other subsystems:\n  - `XRCameraSubsystemCinfo` to `XRCameraSubsystemDescriptor.Cinfo`\n  - `FaceSubsystemParams` to `XRFaceSubsystemDescriptor.Cinfo`\n  - `XRHumanBodySubsystemCinfo` to `XRHumanBodySubsystemDescriptor.Cinfo`\n  - `XREnvironmentProbeSubsystemCinfo` to `XREnvironmentProbeSubsystemDescriptor.Cinfo`\n  - `XROcclusionSubsystemCinfo` to `XROcclusionSubsystemDescriptor.Cinfo`\n  - `XRAnchorSubsystemDescriptor.Create` to `XRAnchorSubsystemDescriptor.Register`\n  - `XRFaceSubsystemDescriptor.Create` to `XRFaceSubsystemDescriptor.Register`\n  - `XRImageTrackingSubsystemDescriptor.Create` to `XRImageTrackingSubsystemDescriptor.Register`\n  - `XRPlaneSubsystemDescriptor.Create` to `XRPlaneSubsystemDescriptor.Register`\n  - `XRPointCloudSubsystemDescriptor.RegisterDescriptor` to `XRPointCloudSubsystemDescriptor.Register`\n  - `XRRaycastSubsystemDescriptor.RegisterDescriptor` to `XRRaycastSubsystemDescriptor.Register`\n  - `XRSessionSubsystemDescriptor.RegisterDescriptor` to `XRSessionSubsystemDescriptor.Register`\n  - `XRCameraSubsystem.Register` to `XRCameraSubsystemDescriptor.Register`\n  - `XREnvironmentProbeSubsystem.Register` to `XREnvironmentProbeSubsystemDescriptor.Register`\n  - `XRHumanBodySubsystem.Register` to `XRHumanBodySubsystemDescriptor.Register`\n  - `XROcclusionSubsystem.Register` to `XROcclusionSubsystemDescriptor.Register`\n\n### Removed\n\n- Removed the `Description` attribute from values of several enums, as the attribute was unused:\n  - `XRCameraFrameProperties`\n  - `AREnvironmentProbePlacementType`\n  - `CameraFocusMode`\n  - `LightEstimationMode`\n  - `EnvironmentDepthMode`\n  - `HumanSegmentationDepthMode`\n  - `HumanSegmentationStencilMode`\n  - `OcclusionPreferenceMode`\n- Removed the following deprecated APIs:\n  - `ARAnchorManager.AddAnchor` method\n  - `ARAnchorManager.RemoveAnchor` method\n  - `ARCamerManager.focusMode` property\n  - `ARCamerManager.lightEstimationMode` property\n  - `ARCamerManager.TryGetLatestImage` method\n  - `AREnvironmentProbeManager.automaticPlacement` property\n  - `AREnvironmentProbeManager.environmentTextureHDR` property\n  - `AREnvironmentProbeManager.AddEnvironmentProbe` method\n  - `AREnvironmentProbeManager.RemoveEnvironmentProbe` method\n  - `ARFaceManager.maximumFaceCount` property\n  - `ARHumanBodyManager.humanBodyPose2DEstimationEnabled` property\n  - `ARHumanBodyManager.humanBodyPose3DEstimationEnabled` property\n  - `ARHumanBodyManager.humanBodyPose3DScaleEstimationEnabled` property\n  - `AROcclusionManager.humanSegmentationStencilMode` property\n  - `AROcclusionManager.humanSegmentationDepthMode` property\n  - `ARPlaneManager.detectionMode` property\n  - `ARSession.matchFrameRate` property\n  - `ARTrackableManager.sessionOrigin` property\n  - `ARTrackedImageManager.maxNumberOfMovingImages` property\n  - `MutableRuntimeReferenceImageLibrary.ScheduleAddImageJob` method\n  - `XRAnchorSubsystemDescriptor.Cinfo.subsystemImplementationType` property\n  - `XRCameraSubsystem.TryGetLatestImage` method\n  - `XRCameraSubsystemCinfo.implementationType` property\n  - `XREnvironmentProbeSubsystemCinfo.implmentationType` property\n  - `FaceSubsystemParams.subsystemImplementationType` property\n  - `XRHumanBodySubsystemCinfo.implementationType` property\n  - `XRImageTrackingSubsystem.Cinfo.subsystemImplementationType` property\n  - `XROcclusionSubsystemCinfo.implementationType` property\n  - `XROcclusionSubsystemCinfo.supportsHumanSegmentationStencilImage` property\n  - `XROcclusionSubsystemCinfo.supportsHumanSegmentationDepthImage` property\n  - `XROcclusionSubsystemCinfo.queryForSupportsEnvironmentDepthImage` property\n  - `XROcclusionSubsystemCinfo.queryForSupportsEnvironmentDepthConfidenceImage` property\n  - `XROcclusionSubsystemDescriptor.supportsHumanSegmentationStencilImage` property\n  - `XROcclusionSubsystemDescriptor.supportsHumanSegmentationDepthImage` property\n  - `XROcclusionSubsystemDescriptor.supportsEnvironmentDepthImage` property\n  - `XROcclusionSubsystemDescriptor.supportsEnvironmentDepthConfidenceImage` property\n  - `XRPlaneSubsystemDescriptor.Cinfo.subsystemImplementationType` property\n  - `XRPointCloudSubsystemDescriptor.Cinfo.implementationType` property\n  - `XRRaycastSubsystemDescriptor.Cinfo.subsystemImplementationType` property\n  - `XRReferenceObjectLibrary.indexOf` method\n  - `XRSessionSubsystem.subsystemImplementationType` property\n  - `XRSubsystem` class\n- Removed the image file `/Editor/Icons/ARVR@4x.png` as it was unused.\n\n### Fixed\n\n- Fixed [ScheduleAddImageJob](xref:UnityEngine.XR.ARFoundation.MutableRuntimeReferenceImageLibraryExtensions.ScheduleAddImageJob) and [ScheduleAddImageWithValidationJob](xref:UnityEngine.XR.ARFoundation.MutableRuntimeReferenceImageLibraryExtensions.ScheduleAddImageWithValidationJob) documentation to describe the correct exceptions thrown if `library` is null.\n- Fixed an issue in XR Simulation where disabling and re-enabling the AR Plane Manager component would cause duplicate planes to be detected where planes had already been detected previously."},"type":"assets","unity":"2023.2","upmCi":{"footprint":"b8f3d04b478427ddd9fd683e3fb011ed5bc49436"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"a042bebcd46c7ff6c9b11fbb803c8def4eea81e3"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@6.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"6.0.0-pre.3","displayName":"AR Foundation","description":"AR Foundation enables you to create multi-platform augmented reality (AR) apps with Unity. To learn more about AR Foundation, click the Documentation link above.","keywords":["xreditorsubsystem","xr","ar","augmented","mixed","reality","foundation","core","subsystem","simulation","visualscripting"],"dependencies":{"com.unity.ugui":"2.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.6.3","com.unity.mathematics":"1.2.6","com.unity.xr.core-utils":"2.2.2","com.unity.xr.management":"4.4.0","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"4e1bf1aaadab3ee13cd4d99b0d4c0d6930fa3d3e","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-6.0.0-pre.3.tgz"}},"5.0.7":{"_upm":{"changelog":"### Fixed\n\n- Fixed issue [ARFB-271](https://issuetracker.unity3d.com/issues/ar-simulation-error-on-arsession-dot-reset-simulationprovider-dot-createvoxelgrids) where `SimulationPlaneSubsystem` could throw a `NullReferenceException` when `ArSession.Reset` is called.\n- Fixed an issue in `SimulationMeshingProvider` where mesh data updates were not properly marked as no longer dirty. This caused the subsystem to unnecessarily update meshes every frame.\n- Fixed issue where `SimulationPlaneSubsystem` could throw a `NullReferenceException` when `XRPlaneSubsystem.GetChanges` is called.\n- Fixed issue [ARFB-176](https://issuetracker.unity3d.com/issues/ios-arenvironmentprobemanager-dot-ondestroy-triggers-application-crash) where destroying an `AREnvironmentProbe` prior to destroying the `AREnvironmentProbeManager` would cause a crash.\n- Fixed issue [ARFB-307](https://issuetracker.unity3d.com/issues/ios-arcamerabackground-retains-depth-texture-when-switching-to-a-scene-with-no-occlusion) where occlusion was persisting after the `AROcclusionManager` was disabled."},"type":"assets","unity":"2021.2","upmCi":{"footprint":"1075804a5a8abce909271d4c17db7a543968ffc2"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"2ed0403e7f5d44edc028e2251019fb47962bd8d7"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.0.7","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.1.0","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"32f4710a5626d7617d99a397de3e59807c6e26ad","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.7.tgz"}},"5.1.0-pre.10":{"_upm":{"changelog":"### Changed\n\n- Entering XR Simulation without an `XR Origin` in the scene now logs an error to the console rather than throwing an exception.\n\n### Fixed\n\n- Fixed an issue where `SimulationAnchorImpl` would incorrectly fail to start and log a warning when using the `ARAnchorManager` in XR Simulation.\n- Fixed issue [ARFB-307](https://issuetracker.unity3d.com/issues/ios-arcamerabackground-retains-depth-texture-when-switching-to-a-scene-with-no-occlusion) where occlusion was persisting after the `AROcclusionManager` was disabled.\n- Fixed an issue in `SimulationEditorUtilities` where uninstalling an XR package while its loader is active causes `NullReferenceException` in the Unity Editor.\n- Fixed an issue where `SimulationEnvironmentAssetsManager` could cause errors on fresh project import by trying to create a new settings assets when the project already has one.\n- Fixed an issue where `SimulationEditorUtilities` could result in an `NullReferenceException` when checking whether simulation loader is enabled or not."},"type":"assets","unity":"2021.2","upmCi":{"footprint":"031097055b70ce7d04709f7411c1627c04478cde"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"2c5f82238dac5958c754a564acedfd17c524156e"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.0-pre.10","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"ba9f68229260241f91b9ef62f6b761f8f75c6fbb","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.0-pre.10.tgz"}},"5.1.0-pre.9":{"_upm":{"changelog":"### Fixed\n\n- Fixed an issue where shader compilation for the `SimulationURPRoomXRay` and `SimulationURPSynthetic` shaders could fail if Universal RP is not installed."},"type":"assets","unity":"2021.2","upmCi":{"footprint":"9c5a1ea4cded400a560fc4bde4af4a6f3b77aee1"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"87b55074446152d5c854e9ecd6a4109009f738d2"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.0-pre.9","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"7375302cfec343a8c1b17b62d25370d4ec9d9a1f","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.0-pre.9.tgz"}},"5.1.0-pre.8":{"_upm":{"changelog":"### Fixed\n\n- Fixed issue where `SimulationPlaneSubsystem` could throw a `NullReferenceException` when `XRPlaneSubsystem.GetChanges` is called.\n- Fixed issue [ARFB-271](https://issuetracker.unity3d.com/issues/ar-simulation-error-on-arsession-dot-reset-simulationprovider-dot-createvoxelgrids) where `SimulationPlaneSubsystem` could throw a `NullReferenceException` when `ArSession.Reset` is called.\n\n- Fixed an issue in `SimulationMeshingProvider` where mesh data updates were not properly marked as no longer dirty. This caused the subsystem to unnecessarily update meshes every frame."},"type":"assets","unity":"2021.2","upmCi":{"footprint":"9166fbc317c9a44ea61872149de06e705cc0c0d2"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"f9037dfd15a9eaf6ff6553201c1fdb8dddaac315"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.0-pre.8","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"47fcd22f22ead3f53fc02b5ecde71c5a0e4446df","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.0-pre.8.tgz"}},"5.1.0-pre.6":{"_upm":{"changelog":"### Added\n\n- Added a set of custom visual scripting nodes designed to help you use AR Foundation in visual scripting projects. Refer to [Visual Scripting](xref:arfoundation-visual-scripting) to learn more about how to set up an AR Foundation visual scripting project.\n- Added support for the [Anchors](xref:arfoundation-anchors) feature in XR Simulation. You can now add and remove anchors in Play mode, add a [Simulated Anchor component](xref:arfoundation-simulation-environments#simulated-anchor-component) to XR Simulation environments, and adjust anchor discovery settings in [XR Simulation project settings](xref:arfoundation-simulation-project-settings).\n- Added enum value `Other` to [PlaneClassification](xref:UnityEngine.XR.ARSubsystems.PlaneClassifications).\n- Added the ability for camera subsystem providers to include [EXIF](https://en.wikipedia.org/wiki/Exif) data with the `XRCameraFrame`.\n\n### Changed\n\n- If XR Simulation is enabled in your project, it will now automatically attempt to set its Environment Layer name to \"XR Simulation\". XR Simulation uses Layer 30 as its default Environment Layer, but you can change this setting by going to **Edit** > **Project Settings** > **XR Plug-in Management** > **XR Simulation**."},"type":"asset","unity":"2021.2","upmCi":{"footprint":"962cfda17cba74b622a2bf2b7012b1ae79b1894b"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"9925313cbe381f68184f63d7deff386be33ecf59"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.0-pre.6","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.1","com.unity.xr.management":"4.0.1","com.unity.editorcoroutines":"1.0.0","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"0a1282bc1e5b09b6b0a1eeff6cdf44fbed1a05d3","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.0-pre.6.tgz"}},"4.2.8":{"_upm":{"changelog":"No changes"},"type":"asset","unity":"2020.3","upmCi":{"footprint":"1987aac09217b55b8c3ef0461af0d494baa4ea24"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"5b1ef9f4a949ea59c1da0629c04f20980ed88117"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@4.2/manual/index.html","name":"com.unity.xr.arfoundation","version":"4.2.8","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.8","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"bf5f47d92ec0d447fcf733d4e08de78e8dde2e63","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.8.tgz"}},"5.0.6":{"_upm":{"changelog":"### Fixed\n\n- Fixed an issue where `UnityEditor.XR.Simulation.SimulationEditorUtilities` could incorrectly throw a `NullReferenceException` when you opened the Editor if no XR Plug-in was enabled for the standalone build target.\n- Fixed an [issue](https://issuetracker.unity3d.com/issues/opengl-xrsimulation-does-not-show-scene-gameobjects-when-using-opengl-graphics-api) for the XR Simulation background where the depth value would be incorrect for graphics APIs using non reversed depth buffer."},"type":"asset","unity":"2021.2","upmCi":{"footprint":"58a4dc532af8ad5101925c7c276d27db1108a283"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"e0c23bb6c351af6a055d43302e6f3bd55cb3a4be"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.0.6","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.1.0","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"e5195730a38df874f32df2ce464e12df3917dd05","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.6.tgz"}},"5.1.0-pre.4":{"_upm":{"changelog":"### Deprecated\n\n- Deprecated the `UnityEngine.XR.ARSubsystems.LightEstimationMode` enum and related extension methods. This functionality was replaced by the [Feature](xref:UnityEngine.XR.ARSubsystems.Feature) flags enum in AR Foundation 3.1, and `LightEstimationMode` has since been unused.\n\n### Fixed\n\n- Fixed an issue where `UnityEditor.XR.Simulation.SimulationEditorUtilities` could incorrectly throw a `NullReferenceException` when you opened the Editor if no XR Plug-in was enabled for the standalone build target.\n- Fixed an issue for the XR Simulation camera where looking down or up would incorrectly affect the direction of movement in some cases.\n- Fixed an [issue](https://issuetracker.unity3d.com/issues/opengl-xrsimulation-does-not-show-scene-gameobjects-when-using-opengl-graphics-api) for the XR Simulation background where the depth value would be incorrect for graphics APIs using non reversed depth buffer."},"type":"asset","unity":"2021.2","upmCi":{"footprint":"e224252be3bc17e613c628e82e745eacb4f24c22"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"95e9680ca1314ca58b5df9a9b3bdbf19eedeacdb"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.0-pre.4","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.0-pre.1","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"18dd1423e73d64bac10306d08326e66a01d3059c","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.0-pre.4.tgz"}},"5.0.5":{"_upm":{"changelog":"### Added\n\n- Added [ARSession.Reset](xref:UnityEngine.XR.ARFoundation.ARSession.Reset) support to relevant subsystems in XR Simulation.\n\n### Fixed\n\n- Fixed an issue for the XR Simulation camera where looking down or up would incorrectly affect the direction of movement in some cases.\n- Fixed an issue where `SimulationCameraSubsystem.subsystemDescriptor.supportsCameraImage` incorrectly returned `true`. The `SimulationCameraSubsystem` in AR Foundation 5.0 does not support the [TryAcquireLatestCpuImage](xref:UnityEngine.XR.ARSubsystems.XRCameraSubsystem.TryAcquireLatestCpuImage(UnityEngine.XR.ARSubsystems.XRCpuImage@)) API, and this property now correctly returns `false`. If you need access to `TryAcquireLatestCpuImage` in XR Simulation, you can upgrade to AR Foundation 5.1, currently in pre-release.\n- Fixed an issue where `SimulationCameraSubsystem.TryAcquireLatestCpuImage` incorrectly returned `true`. This API previously assigned invalid data to its out parameter, and now correctly throws a `NotSupportedException` instead. If you need access to `TryAcquireLatestCpuImage` in XR Simulation, you can upgrade to AR Foundation 5.1, currently in pre-release."},"type":"asset","unity":"2021.2","upmCi":{"footprint":"3adfdb4e53a040d03a79d9312c617f59a0877a3a"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"859a5fcab05cb6cc9560d95819f3741ec1b72063"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.0.5","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.1.0","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"8d684aef4a4f9d58c667b48e469a663ea57859cf","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.5.tgz"}},"5.0.4":{"_upm":{"changelog":"### Changed\n\n- Changed the Editor behavior of XR Simulation Runtime Settings to add input validation and standardize naming conventions for similar settings across simulation subsystem providers.\n- Changed default values of XR Simulation Runtime Settings to improve plane detection performance. If your project already includes AR Foundation, you can accept the new default values by deleting the Asset at `Assets/XR/Resources/XRSimulationRuntimeSettings.asset` and restarting the Editor.\n\n### Removed\n\n- Removed a warning that was previously logged when your AR Foundation project build contained a scene with an `XROrigin` but not an `ARCameraBackground` or `ARCameraManager`. There are valid reasons to set up a scene this way, such as building for OpenXR, so the warning was not helpful.\n\n### Fixed\n\n- Fixed an issue where AR content would not render in the Game view in XR Simulation when using [XRCameraBackgroundRenderingMode.AfterOpaques](xref:UnityEngine.XR.ARSubsystems.XRCameraBackgroundRenderingMode).\n- Fixed an issue where some XR Simulation subsystem providers could break if you destroyed and immediately re-instantiated the Simulation Session Subsystem."},"type":"asset","unity":"2021.2","upmCi":{"footprint":"37ef93c8265516a6e1e2a0f0f85ab686b2d968b3"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"94a902cd16c68d5df55e4cc90955fc669f83f0e5"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.0/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.0.4","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.1.0","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"b61341c854a0d00882288e049a11efb45954ef3a","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.4.tgz"}},"5.1.0-pre.3":{"_upm":{"changelog":"### Added\n\n- Added a public constructor for [XRCpuImage](xref:UnityEngine.XR.ARSubsystems.XRCpuImage).\n- Added support for XRCpuImage API to XR Simulation.\n- Added additional enumeration values to [XRCpuImage.Format](xref:UnityEngine.XR.ARSubsystems.XRCpuImage.Format) for `RGB` image formats.\n- Added [XRCpuImageFormatExtensions.ToXRCpuImageFormat](xref:UnityEngine.XR.ARSubsystems.XRCpuImageFormatExtensions.ToXRCpuImageFormat(UnityEngine.TextureFormat)) extension method for converting [UnityEngine.TextureFormat](xref:UnityEngine.TextureFormat) to [XRCpuImage.Format](xref:UnityEngine.XR.ARSubsystems.XRCpuImage.Format).\n- Added support for the [Environment Probes](xref:arfoundation-environment-probes) feature in XR Simulation. You can now add and remove environment probes in Play mode, add a [Simulated Environment Probe component](xref:arfoundation-simulation-environments#simulated-environment-probe-component) to XR Simulation environments, and adjust environment probe discovery settings in [XR Simulation project settings](xref:arfoundation-simulation-project-settings).\n- Added [ARSession.Reset](xref:UnityEngine.XR.ARFoundation.ARSession.Reset) support to relevant subsystems in XR Simulation.\n\n### Changed\n\n- Downloads version 1.0.0 of simulation environments package rather than 1.0.0-pre.2.\n- Added the `StructLayout(LayoutKind.Sequential)` attribute to [XRCpuImage.Plane.Cinfo](xref:UnityEngine.XR.ARSubsystems.XRCpuImage.Plane.Cinfo) to ensure layout compatibility when marshalling the struct.\n- Changed [XRReferenceImage.ToString](xref:UnityEngine.XR.ARSubsystems.XRReferenceImage.ToString) to include the reference image name in the generated string, in addition to previously included fields.\n- Changed the Editor behavior of XR Simulation Runtime Settings to add input validation and standardize naming conventions for similar settings across simulation subsystem providers.\n- Changed default values of XR Simulation Runtime Settings to improve plane detection performance. If your project already includes AR Foundation, you can accept the new default values by deleting the Asset at `Assets/XR/Resources/XRSimulationRuntimeSettings.asset` and restarting the Editor.\n\n### Removed\n\n- Removed a warning that was previously logged when your AR Foundation project build contained a scene with an `XROrigin` but not an `ARCameraBackground` or `ARCameraManager`. There are valid reasons to set up a scene this way, such as building for OpenXR, so the warning was not helpful. \n\n### Fixed\n\n- Fixed an issue where AR content would not render in the Game view in XR Simulation when using [XRCameraBackgroundRenderingMode.AfterOpaques](xref:UnityEngine.XR.ARSubsystems.XRCameraBackgroundRenderingMode).\n- Fixed an issue where some XR Simulation subsystem providers could break if you destroyed and immediately re-instantiated the Simulation Session Subsystem."},"type":"asset","unity":"2021.2","upmCi":{"footprint":"87eabf2674a0c93e88c965bd7fe31ffac370faa9"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"139bb15bbaa1dba8130e1b605c77210494f9a7ba"},"documentationUrl":"https://docs.unity3d.com/Packages/com.unity.xr.arfoundation@5.1/manual/index.html","name":"com.unity.xr.arfoundation","version":"5.1.0-pre.3","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.2.0-pre.1","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"83485bb059d29e005b6542a8bbc527f6f2493cf1","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.0-pre.3.tgz"}},"5.0.3":{"type":"asset","unity":"2021.2","upmCi":{"footprint":"bc5e2e4bafa85d13625135c7b3175618911dfc70"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"dcbaf640b3101b43f9bcf3bd5f7f7c18653d754b"},"name":"com.unity.xr.arfoundation","version":"5.0.3","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.1.0","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"06414a2fa5534fe39a84a969236742080e320de3","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.3.tgz"}},"5.1.0-pre.2":{"type":"asset","unity":"2021.2","upmCi":{"footprint":"030366584e5e6e2f6251c5d274d9834bf4a0a489"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"bbde313fed995f8e51a3be1e9bf5048ab62ffe4c"},"name":"com.unity.xr.arfoundation","version":"5.1.0-pre.2","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.1.0","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"68153e5a79e403b354f0be100f903808ce06475f","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.0-pre.2.tgz"}},"4.2.7":{"type":"asset","unity":"2020.3","upmCi":{"footprint":"9d577d2ac2303911943947400f0fafd778571468"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"f49c023e846a14016db6ff2bc4c5d0d2e421bef6"},"name":"com.unity.xr.arfoundation","version":"4.2.7","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.7","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"050d65563c8e6be2326f13f5be8b8b9446dc13a2","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.7.tgz"}},"4.1.13":{"type":"asset","unity":"2019.4","upmCi":{"footprint":"7ac8a869dfe91eb79eae15b86b6ec2ab0aaeac80"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"573f8ecf0267d568d1fd82da282e579932156999"},"name":"com.unity.xr.arfoundation","version":"4.1.13","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.1.13","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"e74993c9c67f45210b3b3aeebdb18c72f9d462e2","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.13.tgz"}},"5.1.0-pre.1":{"type":"asset","unity":"2021.2","upmCi":{"footprint":"863bf83007ad2176f346ffe9499fe5c3459243a9"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"0cde569c512d6473b82da92e685f344552d34228"},"name":"com.unity.xr.arfoundation","version":"5.1.0-pre.1","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.1.0","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"a19834aadd29331bf929ed30e0f06240e29701b8","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.1.0-pre.1.tgz"}},"5.0.2":{"type":"asset","unity":"2021.2","upmCi":{"footprint":"5083d09b679264d0092cb180a63ac77c979f5cfd"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"14592dfeeb9ecce202f640c8b661b72b3a763f72"},"name":"com.unity.xr.arfoundation","version":"5.0.2","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.1.0","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"94067d2544c1eef5d3d7c63320a6ec164e467473","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.2.tgz"}},"4.2.6":{"type":"asset","unity":"2020.3","upmCi":{"footprint":"66b46660b792299b1097e1b195aa6ff301b75a6e"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"ce431a269662645e01b2fb844b51b04d9c97bbdd"},"name":"com.unity.xr.arfoundation","version":"4.2.6","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.6","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"4ebbbc5b74e4cad6c27bf26807c2b519b2eec6e0","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.6.tgz"}},"4.1.12":{"type":"asset","unity":"2019.4","upmCi":{"footprint":"b962040ef5c20078b3cc42b88a2d2eacfb4fbd4a"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"db4f6900632a046ea7d74fe28a424c4b5a2279bb"},"name":"com.unity.xr.arfoundation","version":"4.1.12","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.1.12","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"168251b46fed6115013eb57678e8d3c3d43468e1","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.12.tgz"}},"5.0.0-pre.13":{"_upm":{"changelog":"### Changed\n\n- Removed error message for when XR Simulation Environments package sample is not found upon installing sample environments, and replaced it with a warning instructing how to import the sample.\n\n- Use version 1.0.0-pre.2 of *XR Simulation Environments* package installed through the AR Environment toolbar. This version adds documentation and an explicit dependency on AR Foundation.\n\n- Temporary scenes generated for XR Environment Simulation now have a uniquely generated hash appended to their names to prevent loading errors when restarting a simulated AR Session.\n\n### Fixed\n\n- Fixed an issue where `ARBackgroundRendererFeature` would overwrite rendered geometry when rendering in `AfterOpaques` mode while Occlusion was enabled.\n- Fixed an issue where the DefaultSimulationEnvironment would not render correctly when using the Universal Render Pipeline.\n- Fixed error in the AR Environment Overlay if the XR General Settings asset was not created before opening the overlay.\n- Fixed binding error in the AR Environment Overlay when enabling/disabling multiple Plug-in Providers in XR Plug-in Management.\n- Fixed issue in [Simulation Raycast Subsystem](xref:UnityEngine.XR.Simulation.SimulationRaycastSubsystem) where empty arrays were causing out of bounds exceptions.\n- Fixed simulation material inspectors so values correctly update from the inspector to the material.\n- Fixed hard crash from simulation mesh subsystem upon quickly entering and exiting play mode.\n- Fixed simulated image tracking subsystem checking for occlusion of images from the camera.\n- Fixed error loading AR Environment icon when AR Foundation is first added to a project.\n- Fixed crash in `RenderSettings` that was preventing the `SimulationRenderSettings` from being used in the AR Environment View in Unity 2022.1+.\n- Fixed issues where AR Environment Overlay would not be restored or display correctly in a Scene View."},"type":"asset","unity":"2021.2","upmCi":{"footprint":"e461f69e2f4a158ff3c8d6053970b34ff1c6e951"},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"a9955987a2ea6a312d2009d6babcf76c1dc4c202"},"name":"com.unity.xr.arfoundation","version":"5.0.0-pre.13","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.1.0-pre.1","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"cab7b4a7fe224d01105c3aeec23df38f0436b1b5","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.0-pre.13.tgz"}},"5.0.0-pre.12":{"_id":"com.unity.xr.arfoundation@5.0.0-pre.12","_upm":{"changelog":"### Added\n\n- Added automatic refresh of AR environment list upon importing or deleting a prefab with the `SimulationEnvironment` component.\n- Added analytics to anonymously collect usage data of some AR Foundation features. These analytics are captured only in the Unity Editor and not added to the player builds. See [Unity manual on Editor Analytics](https://docs.unity3d.com/Manual/EditorAnalytics.html) for more details.\n- Added support for changing the Camera Background rendering order so that the background can be rendered either `BeforeOpaques` or `AfterOpaques` by setting the `ARCameraManager.requestedRenderingMode` in the editor or at runtime and then checking `ARCameraManager.currentRenderingMode` at runtime for the real rendering mode. See [migration guide](xref:arfoundation-migration-guide-5-x) for more information.\n- Added support for changing the Camera Background rendering order in simulation so that the background can be rendered either `BeforeOpaques` or `AfterOpaques` by setting the `SimulationCameraSubsystem.requestedRenderingMode`.\n- Added support for the following subsystems in simulation.\n  - Point cloud subsystem\n  - Plane subsystem\n  - Image tracking subsystem\n  - Raycast subystem\n  - Mesh subsystem\n  - Camera subsystem\n- Added AR Environment Toolbar Overlay for Scene view. The toolbar supports selecting the active Simulation environment, installing sample Simulation environments, refreshing the list of environments, creating a new environment, duplicating the active environment, and opening the active environment for editing.\n- AR Environment Toolbar Overlay will change the Scene View to an AR Environment View, where you can preview the environment that will be used for Simulation.\n- Added manager to enable X-Ray visualization of simulation environments and options to the Simulation Runtime Settings for enabling or disabling the X-Ray Visuals.\n- Added a **GameObject** &gt; **XR** &gt; **XR Origin (Mobile AR)** menu item, giving users a one-click option to create an [XR Origin](xref:Unity.XR.CoreUtils.XROrigin) which is fully configured for mobile AR.\n- Added `SimulatedMeshClassification` and `SimulatedBoundedPlane` components to default environment prefab to support mesh and plane subsystems in simulation.\n- Added support for `ARBackgroundRenderer` in simulation.\n- Added public constructors for `XRTextureDescriptor` and `XRCameraFrame`.\n- Added point cloud visualization to the [ARDebugMenu](xref:arfoundation-debug-menu).\n- Added `SimulationPreferences` to user preferences in **Edit > Preferences > XR Simulation**.\n- Project wide simulation parameters can be modified in **Edit > Project Settings > XR Plug-in Management > XR Simulation**.\n\n### Changed\n\n- Moved menu item for refreshing the AR environment list from the AR Environment toolbar to the Assets menu.\n- `ARBackgroundRendererFeature` contains an abstract base class for custom render passes to use when defining an ARBackgroundRendererFeature custom pass and defines 2 custom render passes. A `BeforeOpaques` pass and an `AfterOpaques` pass.\n- Moved `UnitySubsystemsManifest.json` from Editor to Runtime since the integrated subsystems for simulation are in the Runtime assembly.\n- Removed `#if UNITY_EDITOR` guards from `ARBackgroundRendererFeature` so that the render feature can now be used in the editor.\n- Changed render settings in default simulation environment so that it uses trilight ambient mode and brighter ambient colors.\n- Updated simulation input subsystem to use `HandheldARInputDevice` instead of `XR HMD`.\n- The unused Post Processing settings field is now hidden in the inspector for `SimulationEnvironment`.\n\n### Deprecated\n\n- Deprecated the depth subsystem abstraction, `XRDepthSubsystem` and `XRDepthSubsystemDescriptor`, in favor of `XRPointCloudSubsystem` and `XRPointCloudSubsystemDescriptor` respectively. This is just a rename of the subsystem without any significant changes to the APIs. Unity's API Updater should automatically convert any deprecated depth subsystem API references to the point cloud subsystem APIs when the project is loaded into the Editor again. See [migration guide](xref:arfoundation-migration-guide-5-x) for more details.\n  - `XRDepthSubsystem` renamed to `XRPointCloudSubsystem`\n  - `XRDepthSubsystemDescriptor` renamed to `XRPointCloudSubsystemDescriptor`\n\n### Fixed\n\n- Fixed error loading AR Environment view icon on first domain load.\n- Fixed issue with simulated image tracking using the wrong vector for checking image direction.\n- Fixed a bug when the vertex count in `SimulationMeshSubsystem` could overflow beyond the limit of 16-bit indexing for large simulation environments. The index format now always uses 32-bit indexing to avoid the issue.\n- Fixed `MissingReferenceException` accessing camera when stopping simulation session subsystem.\n- Fixed error importing sample environments after downloading environments package through AR Environment toolbar.\n- Fixed navigation keys working in simulation even when right mouse button wasn't pressed.\n- Fixed an issue in simulation where the camera starts at the `XROrigin` instead of the simulation environment's specified starting pose.\n- Fixed [issue 960](https://github.com/Unity-Technologies/arfoundation-samples/issues/960) where `ARPointCloudManager.Append` could incorrectly throw an `ArgumentException`. For developers with custom implementations of `XRRaycastSubsystem.Provider` which do not support raycasting with an arbitrary ray, fallback raycasts including hits from point clouds will now correctly return all values.\n- Fixed [issue 963](https://github.com/Unity-Technologies/arfoundation-samples/issues/963) where `ARRaycastManager.RaycastFallback` would sometimes return incomplete results. Developers with custom implementations of `XRRaycastSubsystem.Provider` which do not support raycasting with an arbitrary ray will now see correct results from `ARRaycastManager.Raycast(Ray, TrackableType, Allocator)`.\n- Fixed graphics library error caused when binding a Unity texture object to a native texture object when their mipmap settings do not match.\n- Fixed an issue where recompiling scripts during Play Mode could cause memory leaks if `ARPlaneManager` or `ARPointCloudManager` were present in the scene. XR Simulation does not support script recompilation while playing, but now if a recompilation occurs in Play Mode, AR Foundation will not leak any memory."},"type":"asset","_from":"file:/tmp/com.unity.xr.arfoundation@5.0.0-pre.12-4sk53gne.tgz","unity":"2021.2","upmCi":{"footprint":"91ce45ee961a181663737deee31e763459bc2d31"},"_resolved":"/tmp/com.unity.xr.arfoundation@5.0.0-pre.12-4sk53gne.tgz","_integrity":"sha512-MjaOZk+0luFkMazTxIbYtowRhpxgT1OBJyB7ZDnCma6rdC5Pmg1GgB7vNA2qd1AH8sTjpYufPhGWFgk9P2GlDg==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"4577f2a07a8b076ccc52ae239e6b66396e9d05eb"},"_npmVersion":"7.5.2","_nodeVersion":"12.22.5","name":"com.unity.xr.arfoundation","version":"5.0.0-pre.12","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.mathematics":"1.2.5","com.unity.xr.core-utils":"2.1.0-pre.1","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0","com.unity.modules.unityanalytics":"1.0.0","com.unity.modules.unitywebrequest":"1.0.0"},"dist":{"shasum":"8e3793e3f5649614e4c4a633251cd53ab5695fdb","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.0-pre.12.tgz"}},"4.1.10":{"_id":"com.unity.xr.arfoundation@4.1.10","upm":{"changelog":"### Fixes,- Fixed [issue 1392753](https://issuetracker.unity3d.com/issues/flickering-slash-frozen-textures-when-ar-occlusion-manager-is-disabled) where occlusion texture would remain frozen instead of being cleared when the occlusion manager is disabled.,- Fixed an issue where creating an [ARSessionOrigin](xref:UnityEngine.XR.ARFoundation.ARSessionOrigin) would not tag the newly created camera as \"MainCamera\"."},"type":"asset","_from":"file:/tmp/com.unity.xr.arfoundation@4.1.10-yt0ppak3.tgz","unity":"2019.4","upmCi":{"footprint":"e89926e914e1cbcfa8ab4d591896eebc4cb57e38"},"_resolved":"/tmp/com.unity.xr.arfoundation@4.1.10-yt0ppak3.tgz","_integrity":"sha512-9+vNvzjTMfD9e9EFwIS9FWP5Hy1WATk1M5vRA9WBGUbZu+XBBuNeTuUfuXVpxpizrZ/qCJaSGanbk55NdnyMZg==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"68e960c87558b909d246af7c03a5c51777e937e0"},"_npmVersion":"7.5.2","_nodeVersion":"12.22.5","name":"com.unity.xr.arfoundation","version":"4.1.10","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.1.10","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"45268f096ce175b3e56caef1c5795eee316b2f6e","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.10.tgz"}},"4.2.3":{"_id":"com.unity.xr.arfoundation@4.2.3","upm":{"changelog":"### Fixed,- Fixed [issue 1392753](https://issuetracker.unity3d.com/issues/flickering-slash-frozen-textures-when-ar-occlusion-manager-is-disabled) where occlusion texture would remain frozen instead of being cleared when the occlusion manager is disabled."},"type":"asset","_from":"file:/tmp/com.unity.xr.arfoundation@4.2.3-47b1t_92.tgz","unity":"2020.3","upmCi":{"footprint":"c955e8c5fa09a019d8a918a04d6b1ed3392de255"},"_resolved":"/tmp/com.unity.xr.arfoundation@4.2.3-47b1t_92.tgz","_integrity":"sha512-laN08OjH7vZ4FdCIi5K4LA4CqE+fjKXxytXWB+nTHhgT3Cm3yAeF48moz+/A8mF6T6tvpktp5qwD53hNJ9QA2Q==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"497981bbdfaf531fe240edcfa8f6edfd9aa1567e"},"_npmVersion":"7.5.2","_nodeVersion":"12.22.5","name":"com.unity.xr.arfoundation","version":"4.2.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.3","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"75323ed7f88648c63f2281da0257d364ba5f6dd0","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.3.tgz"}},"5.0.0-pre.9":{"_id":"com.unity.xr.arfoundation@5.0.0-pre.9","upm":{"changelog":"### Added,- Simulation loads an environment prefab from Simulation Settings.,- Added support for a new [OcclusionPreferenceMode.NoOcclusion](xref:UnityEngine.XR.ARSubsystems.Configuration.OcclusionPreferenceMode) mode that, when set, disables occlusion rendering on the camera background when using [ARCameraBackground](xref:UnityEngine.XR.ARFoundation.ARCameraBackground) and [AROcclusionManager](xref:UnityEngine.XR.ARFoundation.AROcclusionManager).,### Changed,- Changed the string \"People Occlusion\" to \"Human Occlusion\" in [Feature](xref:UnityEngine.XR.ARSubsystems.Feature) so that it matches the documentation.,### Fixed,- Fixed [issue 1392753](https://issuetracker.unity3d.com/issues/flickering-slash-frozen-textures-when-ar-occlusion-manager-is-disabled) where occlusion texture would remain frozen instead of being cleared when the occlusion manager is disabled.,- Fixed issue where sliders would slide even when not `interactable` in the [ARDebugMenu](xref:UnityEngine.XR.ARFoundation.ARDebugMenu)."},"type":"asset","_from":"file:/tmp/com.unity.xr.arfoundation@5.0.0-pre.9-r0gfxnct.tgz","unity":"2021.2","upmCi":{"footprint":"92ab8b550c1e54be1d7a82f6a48e107107acd10f"},"_resolved":"/tmp/com.unity.xr.arfoundation@5.0.0-pre.9-r0gfxnct.tgz","_integrity":"sha512-N1jYlWI01SlHBXUJW/E4ywn8hiB3U/DQFrqD/nCo8opGdsLDSCcNS0NSN61v5SvBFfYd5Dk11Xhi5hYYpMf9mQ==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"4f50d482f45e77dc73e4c6ae898578c60efc7c8c"},"_npmVersion":"7.5.2","_nodeVersion":"12.22.5","name":"com.unity.xr.arfoundation","version":"5.0.0-pre.9","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.xr.core-utils":"2.0.0-pre.6","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"c2ba238a9730d3bdd8752c422988c64190a5b0b6","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.0-pre.9.tgz"}},"5.0.0-pre.8":{"_id":"com.unity.xr.arfoundation@5.0.0-pre.8","type":"asset","_from":"file:/tmp/com.unity.xr.arfoundation@5.0.0-pre.8-4svcpihl.tgz","unity":"2021.2","upmCi":{"footprint":"eb03e31ff796ee2eb4fd08132c897e362a7e3f88"},"_resolved":"/tmp/com.unity.xr.arfoundation@5.0.0-pre.8-4svcpihl.tgz","_integrity":"sha512-mxA6NHgzaGaHkq1mQsGXeBk837JytTPSaumvYj9VfrP+ASLfXinIWrGd/qyjU59ErmKnQGxn6YjAweBpPo/p3A==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"e119669b1d882a469dfaa01f37c6f806f2c56355"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","name":"com.unity.xr.arfoundation","version":"5.0.0-pre.8","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem","xreditorsubsystem","arsimulation"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.inputsystem":"1.3.0","com.unity.xr.core-utils":"2.0.0-pre.6","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"a1eb54af0f6b179d780e28bf99b2aa6e555f8030","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.0-pre.8.tgz"}},"4.1.9":{"_id":"com.unity.xr.arfoundation@4.1.9","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.9.tgz","unity":"2019.4","upmCi":{"footprint":"fff92ee6ede44cf43b13b5a0d30b5e851e96dcac"},"_resolved":"/pkgprom/com.unity.xr.arfoundation-4.1.9.tgz","_integrity":"sha512-/HKDD/k9SRXmXUDUTYHuGJMBCWtRWYe02xBRelalgzMOiEt8YYEJQ6f4q+mHUL9VrOQ5ydv2PhbsTnTuFZ4xLA==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"2094ce3ed076044be0e3a742424fd720dfd838ce"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","name":"com.unity.xr.arfoundation","version":"4.1.9","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.1.9","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"e797b723b5f491dae33608aa61e38d9d4b4fdda6","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.9.tgz"}},"2.1.19":{"_id":"com.unity.xr.arfoundation@2.1.19","type":"asset","_from":"file:com.unity.xr.arfoundation-2.1.19.tgz","unity":"2019.4","upmCi":{"footprint":"46845f1b30ae6dc5ef3364313b51fb0b47821df9"},"_resolved":"/pkgprom/com.unity.xr.arfoundation-2.1.19.tgz","_integrity":"sha512-VuYrIof21t1AlJwAGGCoCsTVPR8oRPu+N8bUIsk+xhY1mxAJjeLQcAF8HaKbVGJq/F7/DGuiDN26ecv9LkEu2w==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"33d566141ea3759c6c4ee9bd60aac61768ad7545"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","name":"com.unity.xr.arfoundation","version":"2.1.19","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.19","com.unity.xr.legacyinputhelpers":"2.1.7"},"dist":{"shasum":"4df73d92744ef105f32c2268e62d29d0855f7567","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.19.tgz"}},"4.2.2":{"_id":"com.unity.xr.arfoundation@4.2.2","type":"asset","_from":"file:com.unity.xr.arfoundation-4.2.2.tgz","unity":"2020.3","upmCi":{"footprint":"292813c0da42f9f70e8c56e80bb6f68f78ad3c45"},"_resolved":"/pkgprom/com.unity.xr.arfoundation-4.2.2.tgz","_integrity":"sha512-0Rl3iO9UmmA6ekbOt+/x5J5GBUnYzx6IoPK+sqEQaBsORUB7mYBiij5jPAtwgz2cek9fyKRmE1La7f2okTsalw==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"4d976dcd6bddc72b23fc429829985fa08be9646e"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","name":"com.unity.xr.arfoundation","version":"4.2.2","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.2","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"1bc96a0fb7c6508a86bc011c53c8d11b43673ffc","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.2.tgz"}},"5.0.0-pre.7":{"_id":"com.unity.xr.arfoundation@5.0.0-pre.7","type":"asset","_from":"file:com.unity.xr.arfoundation-5.0.0-pre.7.tgz","unity":"2021.2","upmCi":{"footprint":"6c3b4750a4b1ac2f3a86268b5a6b04c8f9091722"},"_resolved":"/pkgprom/com.unity.xr.arfoundation-5.0.0-pre.7.tgz","_integrity":"sha512-wR0bvTLt8RZNlr+a8ReGWvwNa/HAIeo5aHcKbyZVC8UPk/GNVGZVyugfCNfOSV+7e3NgW3M29LfGNMmNqrYbhA==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"3174ee702685bed781c1dc543efc903bf43be850"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","name":"com.unity.xr.arfoundation","version":"5.0.0-pre.7","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.xr.core-utils":"2.0.0-pre.5","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"6abc334a2d14914d5c45d4b02a07dca3034f2727","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.0-pre.7.tgz"}},"5.0.0-pre.6":{"_id":"com.unity.xr.arfoundation@5.0.0-pre.6","type":"asset","_from":"file:com.unity.xr.arfoundation-5.0.0-pre.6.tgz","unity":"2021.2","upmCi":{"footprint":"1a6496f2cc9b00600b8d5d0cd39b1d082fda5e3e"},"_resolved":"/pkgprom/com.unity.xr.arfoundation-5.0.0-pre.6.tgz","_integrity":"sha512-ybPgBOIHBxny0x3cxuXcPAAcyVQOeAQQLL/S/UZJ/PtyY/CxGk9A1j1eGpu3G5SoHfDtSyg1kPduzmv/9S0EJg==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"52e6e8dcfff00cddabaaba0e8eb1f6a58b86a432"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","name":"com.unity.xr.arfoundation","version":"5.0.0-pre.6","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.xr.core-utils":"2.0.0-pre.5","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"7c19aba26cfa1f6c1b421dc00e12fecdb4c4d6bb","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.0-pre.6.tgz"}},"5.0.0-pre.5":{"_id":"com.unity.xr.arfoundation@5.0.0-pre.5","type":"asset","_from":"file:com.unity.xr.arfoundation-5.0.0-pre.5.tgz","unity":"2021.2","upmCi":{"footprint":"383021b03afd1497701c6fb7535660f994d089b8"},"_resolved":"/pkgprom/com.unity.xr.arfoundation-5.0.0-pre.5.tgz","_integrity":"sha512-QVNqSlsptPegxcv/BbgrEvH7i1NVdZF3Yy1wWjYSIHu2+MsKuC781n6T10tv7mPyJyaSStLxToUE07NUhv8WOQ==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"a01ef23198cb249c5a70515fbcbf87dc5541f3d8"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","name":"com.unity.xr.arfoundation","version":"5.0.0-pre.5","displayName":"AR Foundation","description":"A collection of Subsystems as well as MonoBehaviours and C# utilities for working with the Subsystems. \n\nIncludes: \n▪ Definitions of Subsystems \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core","subsystem"],"dependencies":{"com.unity.ugui":"1.0.0","com.unity.modules.ui":"1.0.0","com.unity.xr.management":"4.0.1","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"efac262dd91c3d9ab8447e7ebd6f0a584fbfa52c","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-5.0.0-pre.5.tgz"}},"4.2.1":{"_id":"com.unity.xr.arfoundation@4.2.1","type":"asset","_from":"file:com.unity.xr.arfoundation-4.2.1.tgz","unity":"2020.3","upmCi":{"footprint":"382aa9df8a7ee9ab862d0d2eba0e30df1bba8ffc"},"_resolved":"/pkgprom/com.unity.xr.arfoundation-4.2.1.tgz","_integrity":"sha512-rwLMGWgfyYxRbqAfaTDC5tirl0mp5EUefwhcHSevKWJ2cwFKFNcpu96L9aqkVf3vC9ai30HflKst+Kb1J531cg==","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"c2ff116257e1911422543239c929c29955c27510"},"_npmVersion":"7.5.2","_nodeVersion":"12.21.0","name":"com.unity.xr.arfoundation","version":"4.2.1","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.1","com.unity.modules.particlesystem":"1.0.0"},"dist":{"shasum":"efabc5127faea099cfe481eee7f5f146766a7132","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.1.tgz"}},"4.2.0":{"_id":"com.unity.xr.arfoundation@4.2.0","type":"asset","_from":"file:com.unity.xr.arfoundation-4.2.0.tgz","unity":"2020.3","upmCi":{"footprint":"1e1acee0dd4309a86a4200aeb593d56ae266124f"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"214a8d84fe8deb14a45c8b5d6949c40b03c3495a"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.2.0","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.0"},"dist":{"shasum":"ed7f0090cf3de1ca4c93e335c227c2953b491c2c","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.0.tgz"}},"4.2.0-pre.12":{"_id":"com.unity.xr.arfoundation@4.2.0-pre.12","type":"asset","_from":"file:com.unity.xr.arfoundation-4.2.0-pre.12.tgz","unity":"2020.3","upmCi":{"footprint":"8eefbe73c0f655aee51bfd79ea4b4fecdde952c0"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"42c970abaa2c945cd998679c777dc06247b08179"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.2.0-pre.12","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.0-pre.12"},"dist":{"shasum":"90bc6e28cc8dcfdefbd0b6f384d0c6e536d1e323","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.0-pre.12.tgz"}},"4.2.0-pre.10":{"_id":"com.unity.xr.arfoundation@4.2.0-pre.10","type":"asset","_from":"file:com.unity.xr.arfoundation-4.2.0-pre.10.tgz","unity":"2020.3","upmCi":{"footprint":"84cb46c093d9717b3dd734ae5a87810b36539b5b"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"7625106c9ff1c2c8c5d70223936c36976d7a0bb2"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.2.0-pre.10","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.0-pre.10"},"dist":{"shasum":"fea3165b29f6b4216f95bdfbe0ef4a9caf1df6de","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.0-pre.10.tgz"}},"4.2.0-pre.9":{"_id":"com.unity.xr.arfoundation@4.2.0-pre.9","type":"asset","_from":"file:com.unity.xr.arfoundation-4.2.0-pre.9.tgz","unity":"2020.3","upmCi":{"footprint":"8201346918f4536376eaf866a0a913015a6b0781"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"0085abc6ed8b37864449077b77a4e322f70728cb"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.2.0-pre.9","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.0-pre.9"},"dist":{"shasum":"a6b07029dba66670b3fbf3dd12244bd22aa18f4e","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.0-pre.9.tgz"}},"4.2.0-pre.8":{"_id":"com.unity.xr.arfoundation@4.2.0-pre.8","type":"asset","_from":"file:com.unity.xr.arfoundation-4.2.0-pre.8.tgz","unity":"2020.3","upmCi":{"footprint":"03d7202782207c19665e320c60b60b0d4cf01911"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"09d238e403522486ca5f8dca4c50466d180f9363"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.2.0-pre.8","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.0-pre.8"},"dist":{"shasum":"1e6dd07f8ccf0813382835774241bca5e76cea94","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.0-pre.8.tgz"}},"4.2.0-pre.7":{"_id":"com.unity.xr.arfoundation@4.2.0-pre.7","type":"asset","unity":"2020.3","upmCi":{"footprint":"c870687e16888830fc90102442a95b8f9927678c"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"60d6e6f724a8bae2624698fb220a3355a4681c59"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.2.0-pre.7","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.0-pre.7"},"dist":{"shasum":"3e9914ea1fa21bc8e8771c48c4cb6395e2a6c99b","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.0-pre.7.tgz"}},"4.2.0-pre.5":{"_id":"com.unity.xr.arfoundation@4.2.0-pre.5","type":"asset","_from":"file:com.unity.xr.arfoundation-4.2.0-pre.5.tgz","unity":"2020.3","upmCi":{"footprint":"213785dc44d5d766b4a4b83417172ef09e108e04"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"7388a21f361c39a10ec210a8995297d14337a177"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.2.0-pre.5","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.0-pre.5"},"dist":{"shasum":"06e9340bd48b318edb4cc21fb7348ea08ba8204b","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.0-pre.5.tgz"}},"4.1.7":{"_id":"com.unity.xr.arfoundation@4.1.7","type":"asset","unity":"2019.4","upmCi":{"footprint":"e7b9a8c9e5d32e56e1c9ffc2e54d34c596cdd5d7"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"b5352c36faf68b8ffc1bbddaa0f204f75d4ac5fb"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.7","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.1.7"},"dist":{"shasum":"8299f360a052e7c40d67365cb851f62b9cc67085","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.7.tgz"}},"2.1.18":{"_id":"com.unity.xr.arfoundation@2.1.18","type":"asset","unity":"2019.4","upmCi":{"footprint":"353930e66827ead31cf9f511ff659ac6956fc021"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"e12082783207dc1670a7cfb3e4917906c26b5c77"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"2.1.18","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.18","com.unity.xr.legacyinputhelpers":"2.1.7"},"dist":{"shasum":"fa4d226bf3166072ce2f7e3eb0f66a2ea3c6270b","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.18.tgz"}},"4.2.0-pre.4":{"_id":"com.unity.xr.arfoundation@4.2.0-pre.4","type":"asset","_from":"file:com.unity.xr.arfoundation-4.2.0-pre.4.tgz","unity":"2020.3","upmCi":{"footprint":"d71af5ad874881b903971f4e3797bb42fad36f76"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"ce984a2e4c0a1069c595a2bc932e5052da7a9641"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.2.0-pre.4","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.0-pre.4"},"dist":{"shasum":"50d06d884d239528eeba3974d2191ee037267c27","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.0-pre.4.tgz"}},"4.2.0-pre.3":{"_id":"com.unity.xr.arfoundation@4.2.0-pre.3","type":"asset","_from":"file:com.unity.xr.arfoundation-4.2.0-pre.3.tgz","unity":"2020.3","upmCi":{"footprint":"48007860a890da8c781c0360d4661809c71cdd12"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"8344e8f05754b4a1e406ef6a6c850e5e04c0d613"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.2.0-pre.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.0-pre.3"},"dist":{"shasum":"3cb9c5e4828a8c36cb731bf1949f36e6bc753b31","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.0-pre.3.tgz"}},"4.2.0-pre.2":{"_id":"com.unity.xr.arfoundation@4.2.0-pre.2","type":"asset","unity":"2020.2","upmCi":{"footprint":"c467f2de6e5abc33e36dff15c96ab54a3e9fb711"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"245162fae8f2825a4754e6270fd31ce14a6cbc93"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.2.0-pre.2","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.2.0-pre.2"},"dist":{"shasum":"134d4b9de0f7652a6ccffea5cb86e80c70ce8cc0","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.2.0-pre.2.tgz"}},"2.1.16":{"_id":"com.unity.xr.arfoundation@2.1.16","type":"asset","unity":"2019.4","upmCi":{"footprint":"1c496e138d5ad2efeecd56b5a957a72e613b819a"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"76a644a216c513ff2775f06de51583f8cb74323e"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"2.1.16","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.16","com.unity.xr.legacyinputhelpers":"2.1.7"},"dist":{"shasum":"bf9167445ae32bc8bee37b2d68a1bed796b48740","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.16.tgz"}},"4.1.5":{"_id":"com.unity.xr.arfoundation@4.1.5","type":"asset","unity":"2019.4","upmCi":{"footprint":"4fdd63685d115e556ec1d85dd834542a073e1ebf"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"696da08cb78f76847add0b73418055285093cca0"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.5","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.1.5"},"dist":{"shasum":"bffb80b5ee54df8f7319cf22cba566c4f0764f71","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.5.tgz"}},"4.0.12":{"_id":"com.unity.xr.arfoundation@4.0.12","type":"asset","unity":"2019.4","upmCi":{"footprint":"23b2767a0e2d3d89292b6f9a588b0dee28620b5e"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"d2250746d9e0645ddb4cf008d12f833bf31603e1"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.0.12","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"4.0.1","com.unity.xr.arsubsystems":"4.0.12"},"dist":{"shasum":"ddc78b8d1535b5803ed164c648e576aac3e12e34","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.0.12.tgz"}},"4.1.3":{"_id":"com.unity.xr.arfoundation@4.1.3","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.3.tgz","unity":"2019.4","upmCi":{"footprint":"f504da56f8c5b85e75bc54c6d4f880b4288ff3f6"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{"email":"mike.adkins@unity3d.com"},"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"c28b093452040e9070ef6f345741c75f120ff5c9"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.17","com.unity.xr.arsubsystems":"4.1.3"},"dist":{"shasum":"6448683574a70f6fc138e4f3964c737f1181c1e0","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.3.tgz"}},"4.0.10":{"_id":"com.unity.xr.arfoundation@4.0.10","type":"asset","_from":"file:com.unity.xr.arfoundation-4.0.10.tgz","unity":"2019.4","upmCi":{"footprint":"ab3c58f918676bc4574a46978a6331d907d87fb5"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{"email":"mike.adkins@unity3d.com"},"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"e3fbe1a4a504ff703ae82289a7715f2434d9ae82"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.0.10","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.17","com.unity.xr.arsubsystems":"4.0.10"},"dist":{"shasum":"e167b416eb000decbf5ec1322a5564084c664c97","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.0.10.tgz"}},"3.1.10":{"_id":"com.unity.xr.arfoundation@3.1.10","type":"asset","unity":"2019.4","upmCi":{"footprint":"3ee52cac2d7444f32c77d23cadf1ee3417e90d67"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"2405b333ba9f545f219bcc573b5c9b364015ef1d"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"3.1.10","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.1.10"},"dist":{"shasum":"ffdf77633796b72a6e7274aad95fb0c3d88da258","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.1.10.tgz"}},"2.1.14":{"_id":"com.unity.xr.arfoundation@2.1.14","type":"asset","_from":"file:com.unity.xr.arfoundation-2.1.14.tgz","unity":"2019.4","upmCi":{"footprint":"a22a92458d3af68ba0b15b7588cc513bc039d3d2"},"readme":"# AR Foundation\n\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\n\n## Branch Guidelines\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \n\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\n\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\n\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\n\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\n\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\n\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\n","_npmUser":{"email":"mike.adkins@unity3d.com"},"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/arfoundation.git","type":"git","revision":"b70be7503d6366e60c7a36ea7723c3a368c6befb"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"2.1.14","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.14","com.unity.xr.legacyinputhelpers":"2.1.7"},"dist":{"shasum":"87f257c6d5ee285a847b2537358901db5583dcf9","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.14.tgz"}},"4.1.1":{"_id":"com.unity.xr.arfoundation@4.1.1","type":"asset","unity":"2019.4","upmCi":{"footprint":"a075432d1f594c51ba048ebcd9d9a719394da8af"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"48a10c5ba1e2e73ea21f6c9b36d93c69da4ccb79"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.1","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.16","com.unity.xr.arsubsystems":"4.1.1"},"dist":{"shasum":"9441a65d2e1a294088a4613863e338facb19d006","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.1.tgz"}},"4.1.0-preview.13":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.13","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.13.tgz","unity":"2019.4","upmCi":{"footprint":"6cf3c29b4aded206e507af5aa80f978ab55607da"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"b981cd2a45f5f4d7a8e0372369bb137032736fca"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.13","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.16","com.unity.xr.arsubsystems":"4.1.0-preview.13"},"dist":{"shasum":"9b953e2526b4e3798badf721a117df36c4de2d1f","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.13.tgz"}},"4.1.0-preview.12":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.12","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.12.tgz","unity":"2019.4","upmCi":{"footprint":"b66236f71fea106627fa3770088347043d148661"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"4ac788f5c7317b9558afe529cef1b9195adbf19e"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.12","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.16","com.unity.xr.arsubsystems":"4.1.0-preview.12"},"dist":{"shasum":"5579025c204c2934f73932979d6d82f20afc6c22","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.12.tgz"}},"4.1.0-preview.11":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.11","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.11.tgz","unity":"2019.4","upmCi":{"footprint":"51903a07fa93277c887c8091a621cc1ca9ad3337"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"afa35fb0934e9d860481bae00a722aeb5528694d"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.11","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.16","com.unity.xr.arsubsystems":"4.1.0-preview.11"},"dist":{"shasum":"c6f5edd88b81acf537363ff25db1ed04b0334cae","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.11.tgz"}},"2.1.10":{"_id":"com.unity.xr.arfoundation@2.1.10","type":"asset","unity":"2019.4","upmCi":{"footprint":"e3c291a554fc51227bd532b98522d7f0162a152d"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"ec391d26cf0ce77ffe03693f9a617bfa46f6fa31"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"2.1.10","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.3","com.unity.xr.legacyinputhelpers":"2.1.1"},"dist":{"shasum":"c69b34fe273b27d48779520fb131546c00896617","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.10.tgz"}},"3.1.6":{"_id":"com.unity.xr.arfoundation@3.1.6","type":"asset","unity":"2019.4","upmCi":{"footprint":"06d4a6db7948b2681648553e6cfdd6e4b32e13a6"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"9cc93f422f1db3a9cf141ef496c4ec5d0c91c83a"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"3.1.6","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.1.6"},"dist":{"shasum":"aa2c5f63ffeb46432b6e0b70c8628c9ef5d49191","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.1.6.tgz"}},"4.0.9":{"_id":"com.unity.xr.arfoundation@4.0.9","type":"asset","unity":"2019.4","upmCi":{"footprint":"d20fa8b94eed89d823f1663a7033cd759c868eaa"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"1d9f8b6243e086c4c79d2b3968910376718aa52d"},"_npmVersion":"5.6.0","_nodeVersion":"8.17.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.0.9","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.13","com.unity.xr.arsubsystems":"4.0.9"},"dist":{"shasum":"46fd6ded70d6094b345db8afb4477ee5e33927b6","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.0.9.tgz"}},"4.1.0-preview.10":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.10","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.10.tgz","unity":"2019.4","upmCi":{"footprint":"480a761ef57c99689b3c865b5b709943e37a0955"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"50b73ea89e0484ad26f1b9a117aad3df2172efee"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.10","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.16","com.unity.xr.arsubsystems":"4.1.0-preview.10"},"dist":{"shasum":"ba853a6f8f617083c9cf3e59f6c5e4407052e0e6","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.10.tgz"}},"4.1.0-preview.9":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.9","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.9.tgz","unity":"2019.4","upmCi":{"footprint":"e1960bc78fff6b2027beef3885b4536726dd1a5e"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"0f3bfd4709d029fc9ad268a392e91917aa6889f4"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.9","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.15","com.unity.xr.arsubsystems":"4.1.0-preview.9"},"dist":{"shasum":"943af47522b3558aff590213e7174522c4a9866e","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.9.tgz"}},"3.1.5":{"_id":"com.unity.xr.arfoundation@3.1.5","type":"asset","unity":"2019.4","upmCi":{"footprint":"c386c911b2df773342785913c1aab9fed63e5b08"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"47d112cbb2560d5debc41a559428a8a438e413b1"},"_npmVersion":"5.6.0","_nodeVersion":"8.11.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"3.1.5","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.1.5"},"dist":{"shasum":"42f155e218f8eb6c743a08584654eb767fd401a7","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.1.5.tgz"}},"4.0.8":{"_id":"com.unity.xr.arfoundation@4.0.8","type":"asset","unity":"2019.4","upmCi":{"footprint":"b91dc9d5ededd912e8fdaeecb175b0c003caf12e"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"669c4911d29bcbb3764f239a3ef7b33e6289bb62"},"_npmVersion":"5.6.0","_nodeVersion":"8.11.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.0.8","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.13","com.unity.xr.arsubsystems":"4.0.8"},"dist":{"shasum":"694dbb192e033b4cc2cd2161702a59eb75802ebb","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.0.8.tgz"}},"4.1.0-preview.7":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.7","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.7.tgz","unity":"2019.4","upmCi":{"footprint":"623b32c57dda52aabea5f57a1828301e1697b5ff"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"7ed0121d2e5d603c3f5c70e6ef41d5aabf07b271"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.7","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.13","com.unity.xr.arsubsystems":"4.1.0-preview.7"},"dist":{"shasum":"eff78b0f6deee23a3dcc307cb91bbb1f5ce66979","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.7.tgz"}},"4.1.0-preview.6":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.6","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.6.tgz","unity":"2019.4","upmCi":{"footprint":"2ad197bfeae7c1a65d5e14e591f8a027492dd5d1"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"306077d01704b18898a427c39303a6fcaea11b32"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.6","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.13","com.unity.xr.arsubsystems":"4.1.0-preview.6"},"dist":{"shasum":"2fc49eb2e60ec8b7fb1db53d4b073f6588541561","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.6.tgz"}},"4.1.0-preview.5":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.5","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.5.tgz","unity":"2019.4","upmCi":{"footprint":"9b063683ee5f618552a86f106dcd07b1e3bcce41"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"fb5398c2c1e02106976ae33b1ab8ad7a490f6bbf"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.5","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.13","com.unity.xr.arsubsystems":"4.1.0-preview.5"},"dist":{"shasum":"aa74c4dc71364b41696049fcd5a8fe324a87be8f","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.5.tgz"}},"4.1.0-preview.3":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.3","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.3.tgz","unity":"2019.4","upmCi":{"footprint":"24fc43415ea0544224d06478e84994d612fa2ee5"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"34dceb05ffb3e8e8794a39d4f5051d43fdb7c928"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.13","com.unity.xr.arsubsystems":"4.1.0-preview.3"},"dist":{"shasum":"d62654c56b65099eeb6cbc9ccbb796ead85d3821","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.3.tgz"}},"4.1.0-preview.2":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.2","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.2.tgz","unity":"2019.4","upmCi":{"footprint":"a6b8aac053b230bb47e296fa34291dd99c14021a"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"bbb004c41f4ce22c8b4d70b0fc69d84dbfd678c6"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.2","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.10","com.unity.xr.arsubsystems":"4.1.0-preview.2"},"dist":{"shasum":"b59c92d264aff357475ff0d7799d23e5bad51bff","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.2.tgz"}},"4.1.0-preview.1":{"_id":"com.unity.xr.arfoundation@4.1.0-preview.1","type":"asset","_from":"file:com.unity.xr.arfoundation-4.1.0-preview.1.tgz","unity":"2019.4","upmCi":{"footprint":"e4ace3f2e27449f2571084e7fc1aecc054be78e2"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"a1096e061e41cd3d1edf2c0a88bbbdb6f68849d6"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.1.0-preview.1","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.10","com.unity.xr.arsubsystems":"4.1.0-preview.1"},"dist":{"shasum":"db9688c01511abb0d12984611d0ba646fa5cf30e","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.1.0-preview.1.tgz"}},"4.0.2":{"_id":"com.unity.xr.arfoundation@4.0.2","type":"asset","unity":"2019.3","upmCi":{"footprint":"3c7c30374364ca272b2777b570b7a9ee75c7e770"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{},"repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"83c16d795d1f6106a38cda34a0b28c92175d4b84"},"_npmVersion":"5.6.0","_nodeVersion":"8.11.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.0.2","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.10","com.unity.xr.arsubsystems":"4.0.1"},"dist":{"shasum":"0f1838b084d5881f8092bbb07315565324b2f070","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.0.2.tgz"}},"4.0.0-preview.3":{"_id":"com.unity.xr.arfoundation@4.0.0-preview.3","type":"asset","_from":"file:com.unity.xr.arfoundation-4.0.0-preview.3.tgz","unity":"2019.3","upmCi":{"footprint":"4faa2d38a17f05ad386477b6db78ce9bf1fc6f3e"},"readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"2bbf9f7c6c0bbee0115d760a898a13e97d59d5d6"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.0.0-preview.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.management":"3.2.10","com.unity.xr.arsubsystems":"4.0.0-preview.3"},"dist":{"shasum":"75fc574fc7e8af747bc5a8dee339e30b1b2e06c2","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.0.0-preview.3.tgz"}},"3.1.3":{"_id":"com.unity.xr.arfoundation@3.1.3","type":"asset","_from":"..\\..\\..\\..\\MIKE~1.ADK\\AppData\\Local\\Temp\\com.unity.xr.arfoundation-3.1.3.tgz","unity":"2019.2","readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_shasum":"fc294a18118e252bc67946d9cfd0bc8d0c49dd25","scripts":{},"_npmUser":{},"_resolved":"file:..\\..\\..\\..\\MIKE~1.ADK\\AppData\\Local\\Temp\\com.unity.xr.arfoundation-3.1.3.tgz","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"86d92cb750e145421336819c215ba6864386706c","footprint":"f75a902cfdaa1c29e8f48790079f512a89dcd1d5"},"_npmVersion":"3.10.10","_nodeVersion":"6.10.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"3.1.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.1.3"},"dist":{"shasum":"fc294a18118e252bc67946d9cfd0bc8d0c49dd25","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.1.3.tgz"}},"2.1.8":{"_id":"com.unity.xr.arfoundation@2.1.8","type":"asset","_from":"..\\..\\..\\..\\MIKE~1.ADK\\AppData\\Local\\Temp\\com.unity.xr.arfoundation-2.1.8.tgz","unity":"2019.3","readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_shasum":"e90d8563d4c1e8d73e63f9b8de9db0c62cc08c7b","scripts":{},"_npmUser":{},"_resolved":"file:..\\..\\..\\..\\MIKE~1.ADK\\AppData\\Local\\Temp\\com.unity.xr.arfoundation-2.1.8.tgz","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"9f05ec4d07de91aab51ab7b68a5e47da0ba5d394","footprint":"1966163275ba611119634d1a1d6bfaac1e090d14"},"_npmVersion":"3.10.10","_nodeVersion":"6.10.0","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"2.1.8","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.2","com.unity.xr.legacyinputhelpers":"2.1.1"},"dist":{"shasum":"e90d8563d4c1e8d73e63f9b8de9db0c62cc08c7b","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.8.tgz"}},"4.0.0-preview.1":{"_id":"com.unity.xr.arfoundation@4.0.0-preview.1","type":"asset","_from":"file:com.unity.xr.arfoundation-4.0.0-preview.1.tgz","unity":"2019.3","readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"6016d7d6a4a5ff28949f352cba834465ee2722ca","footprint":"83e803d3ba529f964f36a6f114a39171aa062050"},"_npmVersion":"6.13.4","_nodeVersion":"12.16.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"4.0.0-preview.1","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"4.0.0-preview.1"},"dist":{"shasum":"a8cfe4da8c0c41a7b1c1c63f2f4795ec1a8dcd45","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-4.0.0-preview.1.tgz"}},"3.1.0-preview.8":{"_id":"com.unity.xr.arfoundation@3.1.0-preview.8","type":"asset","_from":"file:com.unity.xr.arfoundation-3.1.0-preview.8.tgz","unity":"2019.2","readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{"name":"service-airflow-production@unity","email":"packman-ops+service-airflow-production@unity3d.com"},"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"82b9c51095e517316a5a7d0fb6b2830e8ad3cfe7","footprint":"50fafc859dc46bdc0b7b6970f93e7f78780afe9b"},"_npmVersion":"6.13.4","_nodeVersion":"12.14.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"3.1.0-preview.8","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.1.0-preview.8"},"dist":{"shasum":"0fb20a56cefc00353928095f1b2706467e3dc045","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.1.0-preview.8.tgz"}},"3.1.0-preview.7":{"_id":"com.unity.xr.arfoundation@3.1.0-preview.7","type":"asset","_from":"file:com.unity.xr.arfoundation-3.1.0-preview.7.tgz","unity":"2019.2","readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{"name":"service-airflow-production@unity","email":"packman-ops+service-airflow-production@unity3d.com"},"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"d34dc1e8133c52c4397813768dcf2b0cbf67b0a6","footprint":"97c3fb38fc0742c456197eaced857efdb3add556"},"_npmVersion":"6.13.4","_nodeVersion":"12.14.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"3.1.0-preview.7","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.1.0-preview.7"},"dist":{"shasum":"81d58875cdf1a82faaa8c3bc687ee84a7265d7ef","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.1.0-preview.7.tgz"}},"3.1.0-preview.6":{"_id":"com.unity.xr.arfoundation@3.1.0-preview.6","type":"asset","_from":"file:com.unity.xr.arfoundation-3.1.0-preview.6.tgz","unity":"2019.3","readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{"name":"service-airflow-production@unity","email":"packman-ops+service-airflow-production@unity3d.com"},"_resolved":"","_integrity":"","repository":{"url":"https://github.cds.internal.unity3d.com/unity/com.unity.xr.arfoundation.git","type":"git","revision":"97cd094f14d8aa7ae413427e0fc08a256b9ac2e1","footprint":"aef3c313f7029537963ad5ec2c9c81c296bca046"},"_npmVersion":"6.13.4","_nodeVersion":"12.14.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"3.1.0-preview.6","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.1.0-preview.6"},"dist":{"shasum":"767c6af8e6364dfdd21e0a8ebe8855c4fad9a660","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.1.0-preview.6.tgz"}},"3.1.0-preview.4":{"_id":"com.unity.xr.arfoundation@3.1.0-preview.4","type":"asset","_from":"file:com.unity.xr.arfoundation-3.1.0-preview.4.tgz","unity":"2019.2","readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{"name":"service-airflow-production@unity","email":"packman-ops+service-airflow-production@unity3d.com"},"_resolved":"","_integrity":"","repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"d20361ac3b7131b18de6a3f4de61dbcc41ccf8e4"},"_npmVersion":"6.12.1","_nodeVersion":"12.13.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"3.1.0-preview.4","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.1.0-preview.4"},"dist":{"shasum":"957f53aca42c31c5beb03634b16953c1d97f0574","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.1.0-preview.4.tgz"}},"3.1.0-preview.3":{"_id":"com.unity.xr.arfoundation@3.1.0-preview.3","type":"asset","_from":"file:com.unity.xr.arfoundation-3.1.0-preview.3.tgz","unity":"2019.2","readme":"# AR Foundation\r\n\r\nUse the AR Foundation package to add high-level functionality for working with augmented reality. Unity 2018.1 includes built-in multi-platform support for AR. These APIs are in the `UnityEngine.XR.ARSubsystems` namespace, and consist of a number of `Subsystem`s, e.g., `XRPlaneSubsystem`. Several XR Subsystems comprise the low-level API for interacting with AR. The **AR Foundation** package wraps this low-level API into a cohesive whole and enhances it with additional utilities, such as AR session lifecycle management and the creation of `GameObject`s to represent detected features in the environment.\r\n\r\n## Branch Guidelines\r\n* `master` ==> Target this branch for changes that need to be in the most recent preview package. Then cherry-pick changes from this branch into older, non-staging branches. `master` will eventually branch to `2.1.x` once work on a newer release begins. \r\n\r\n* `2.0.x` - Target this branch for changes that should be in the 2.0.x package versions.\r\n\r\n* `2.0.x-staging` - Only merge to this branch from `2.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `2.0.x` and then a merge would take place into `2.0.x-staging`.\r\n\r\n* `1.1.x` - Target this branch for changes that should be in the 1.1.x package versions.\r\n\r\n* `1.1.x-staging` - Only merge to this branch from `1.1.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.1.x` and then a merge would take place into `1.1.x-staging`.\r\n\r\n* `1.0.x` - Target this branch for changes that should be in the 1.0.x package versions.\r\n\r\n* `1.0.x-staging` - Only merge to this branch from `1.0.x` in preparation for a release. This package should ideally contain the exact contents of the latest release on [staging Bintray](https://bintray.com/unity/unity-staging/com.unity.xr.arfoundation). So before a new release QA would validate against `1.0.x` and then a merge would take place into `1.0.x-staging`.\r\n","_npmUser":{"name":"service-airflow-production@unity","email":"packman-ops+service-airflow-production@unity3d.com"},"_resolved":"","_integrity":"","repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"642ad9016210ca4571a32d3eac56d9f9fb6db1b4"},"_npmVersion":"6.12.1","_nodeVersion":"12.13.1","readmeFilename":"README.md","name":"com.unity.xr.arfoundation","version":"3.1.0-preview.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n▪ GameObject menu items for creating an AR setup \n▪ MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n▪ Scale handling \n▪ Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.1.0-preview.2"},"dist":{"shasum":"e7b3ff43b0cf4f14ef4241977f7efad493002b18","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.1.0-preview.3.tgz"}},"3.0.1":{"_id":"com.unity.xr.arfoundation@3.0.1","type":"asset","unity":"2019.2","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"bd4ea3612b0865dfde851f5c3a75b3103f998ca0"},"name":"com.unity.xr.arfoundation","version":"3.0.1","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.0.0"},"dist":{"shasum":"25100781aa03bace4984d6ce8234a606c22073c8","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.0.1.tgz"}},"3.1.0-preview.1":{"_id":"com.unity.xr.arfoundation@3.1.0-preview.1","type":"asset","unity":"2019.2","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"8af8130e5b8b7970e6daaa6fbb287ea49bec22eb"},"name":"com.unity.xr.arfoundation","version":"3.1.0-preview.1","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.1.0-preview.1"},"dist":{"shasum":"69f22742e0baf022ecb81590f3ac56b2ac94fa3f","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.1.0-preview.1.tgz"}},"3.0.0-preview.6":{"_id":"com.unity.xr.arfoundation@3.0.0-preview.6","type":"asset","unity":"2019.2","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"b44c9e406a5a76ed5a53286063de42ee20990768"},"name":"com.unity.xr.arfoundation","version":"3.0.0-preview.6","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.0.0-preview.4"},"dist":{"shasum":"1d84a4475573f06a14755f8f65e62bde23807dfd","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.0.0-preview.6.tgz"}},"1.5.0-preview.7":{"_id":"com.unity.xr.arfoundation@1.5.0-preview.7","type":"asset","unity":"2018.3","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"a8ed90e45801ded18c2f007abec886eda71601ff"},"name":"com.unity.xr.arfoundation","version":"1.5.0-preview.7","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.2.0-preview.6"},"dist":{"shasum":"5072282951ad97c569a1de9d69743b1da2996eeb","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.5.0-preview.7.tgz"}},"2.2.0-preview.6":{"_id":"com.unity.xr.arfoundation@2.2.0-preview.6","type":"asset","unity":"2019.1","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"372be8819b9835d60d530de8f1807340db9dc920"},"name":"com.unity.xr.arfoundation","version":"2.2.0-preview.6","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.2.0-preview.6","com.unity.xr.legacyinputhelpers":"1.0.0"},"dist":{"shasum":"acd3519f5174b6cfa6e3be0d90f40516423b6935","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.2.0-preview.6.tgz"}},"3.0.0-preview.4":{"_id":"com.unity.xr.arfoundation@3.0.0-preview.4","type":"asset","unity":"2019.2","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"1ddfb737adb0d6fd7b50d0826a225a540ce41eef"},"name":"com.unity.xr.arfoundation","version":"3.0.0-preview.4","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking\n\nSamples available at https://github.com/Unity-Technologies/arfoundation-samples","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.0.0-preview.4"},"dist":{"shasum":"220a50dbe0b987087424aaf5220ddd6b0370adbf","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.0.0-preview.4.tgz"}},"2.1.4":{"_id":"com.unity.xr.arfoundation@2.1.4","type":"asset","unity":"2019.1","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"b6f43f5c91df0e70943201f81b602b1da07013ab"},"name":"com.unity.xr.arfoundation","version":"2.1.4","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.1","com.unity.xr.legacyinputhelpers":"1.3.7"},"dist":{"shasum":"6e391b9dd0eb100d935f4fc589f11603749884b0","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.4.tgz"}},"3.0.0-preview.3":{"_id":"com.unity.xr.arfoundation@3.0.0-preview.3","type":"asset","unity":"2019.2","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"5b627e982ee92ca79ef03039f7dafb89004671d8"},"name":"com.unity.xr.arfoundation","version":"3.0.0-preview.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.0.0-preview.3"},"dist":{"shasum":"1523a08de87c5517c5c1cec736419ae364b93576","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.0.0-preview.3.tgz"}},"3.0.0-preview.2":{"_id":"com.unity.xr.arfoundation@3.0.0-preview.2","unity":"2019.2","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"6ab9d5d22388fcee78729f19bf98086879930202"},"name":"com.unity.xr.arfoundation","version":"3.0.0-preview.2","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.0.0-preview.2"},"dist":{"shasum":"bcb07f6fed8b1062210701254f57ac1d03891b05","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.0.0-preview.2.tgz"}},"3.0.0-preview.1":{"_id":"com.unity.xr.arfoundation@3.0.0-preview.1","unity":"2019.2","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"ca072c4eebe004f05b901cc8e18bb0bcc0a8e374"},"name":"com.unity.xr.arfoundation","version":"3.0.0-preview.1","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"3.0.0-preview.1","com.unity.xr.legacyinputhelpers":"1.3.7"},"dist":{"shasum":"47b0fb6f951245350a5b71733bda5da4d7d1fffe","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-3.0.0-preview.1.tgz"}},"2.1.3":{"_id":"com.unity.xr.arfoundation@2.1.3","unity":"2019.1","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"6577676fbf54682289935f7d8f5eba20d2757e62"},"name":"com.unity.xr.arfoundation","version":"2.1.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.0","com.unity.xr.legacyinputhelpers":"1.3.7"},"dist":{"shasum":"3f0c68795e81a8b7da9ae8844a3e71d309b69ead","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.3.tgz"}},"2.1.1":{"_id":"com.unity.xr.arfoundation@2.1.1","unity":"2019.1","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"2ad364e78506a0477fc3463a5550933f660adbcb"},"name":"com.unity.xr.arfoundation","version":"2.1.1","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.0","com.unity.xr.legacyinputhelpers":"1.3.4"},"dist":{"shasum":"937677d8128418fdcb63db4fc89475b1c3b4a299","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.1.tgz"}},"2.2.0-preview.3":{"_id":"com.unity.xr.arfoundation@2.2.0-preview.3","unity":"2019.1","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"fc7a3a6a7c66c7064fd5761b96e603e1589426a9"},"name":"com.unity.xr.arfoundation","version":"2.2.0-preview.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.2.0-preview.3","com.unity.xr.legacyinputhelpers":"1.0.0"},"dist":{"shasum":"3a9536fe2df19a741656232ff6edd7396e40f54a","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.2.0-preview.3.tgz"}},"1.5.0-preview.6":{"_id":"com.unity.xr.arfoundation@1.5.0-preview.6","unity":"2018.3","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"47b7ce43cb5591c0777af244cc47e04f81220728"},"name":"com.unity.xr.arfoundation","version":"1.5.0-preview.6","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.2.0-preview.3"},"dist":{"shasum":"1a29d869e90e2d5ebb05e0bdd2f1db8ed381b6f2","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.5.0-preview.6.tgz"}},"1.5.0-preview.5":{"_id":"com.unity.xr.arfoundation@1.5.0-preview.5","unity":"2018.3","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"d82c9270b1d08e3ffe5f3e8b5083982ca805e376"},"name":"com.unity.xr.arfoundation","version":"1.5.0-preview.5","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.2.0-preview.2"},"dist":{"shasum":"03cdebe7953471e86cc6369f03b81e07175c1126","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.5.0-preview.5.tgz"}},"2.2.0-preview.2":{"_id":"com.unity.xr.arfoundation@2.2.0-preview.2","unity":"2019.1","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"ba93265c5b473ce777d3ec19cde69f09d8014965"},"name":"com.unity.xr.arfoundation","version":"2.2.0-preview.2","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.2.0-preview.2","com.unity.xr.legacyinputhelpers":"1.0.0"},"dist":{"shasum":"f6c5818209d5bf948231f21cce11775f61675c45","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.2.0-preview.2.tgz"}},"2.1.0-preview.3":{"_id":"com.unity.xr.arfoundation@2.1.0-preview.3","unity":"2019.1","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"2e5fa907e7be99a46a740dfe79f27dfc4a458fb7"},"name":"com.unity.xr.arfoundation","version":"2.1.0-preview.3","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.0-preview.2","com.unity.xr.legacyinputhelpers":"1.0.0"},"dist":{"shasum":"6c64466c0ac6326e5cfd8ada5f97bbf64f8030e9","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.0-preview.3.tgz"}},"1.5.0-preview.2":{"_id":"com.unity.xr.arfoundation@1.5.0-preview.2","unity":"2018.3","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"1b370d0f591e90df82ffce0a726f89ab1d38d90f"},"name":"com.unity.xr.arfoundation","version":"1.5.0-preview.2","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.0-preview.1"},"dist":{"shasum":"535b301fc876d2d1db103dcf670b118a3eb3a77c","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.5.0-preview.2.tgz"}},"2.1.0-preview.2":{"_id":"com.unity.xr.arfoundation@2.1.0-preview.2","unity":"2019.1","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"6b3473c39679f7fd85c2896c3e785824d361766e"},"name":"com.unity.xr.arfoundation","version":"2.1.0-preview.2","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.1.0-preview.1","com.unity.xr.legacyinputhelpers":"1.0.0"},"dist":{"shasum":"607b2babc9ecec9ec7aa4689333acf626c6d2399","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.1.0-preview.2.tgz"}},"2.0.2":{"_id":"com.unity.xr.arfoundation@2.0.2","unity":"2019.2","scripts":{},"repository":{"url":"git@github.cds.internal.unity3d.com:unity/com.unity.xr.arfoundation.git","type":"git","revision":"99943b8f8ad6c3bbde0c8039f4d2ff9e5f7afba1"},"unityRelease":"0a8","name":"com.unity.xr.arfoundation","version":"2.0.2","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arsubsystems":"2.0.2","com.unity.xr.legacyinputhelpers":"1.0.0"},"dist":{"shasum":"a20c316f6f135e316e0ffec320c29554f53141d2","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-2.0.2.tgz"}},"1.1.0-preview.6":{"_id":"com.unity.xr.arfoundation@1.1.0-preview.6","unity":"2019.1","scripts":{},"repository":{"url":"https://gitlab.cds.internal.unity3d.com/upm-packages/XR/arfoundation.git","type":"git","revision":"07ac809e75f1b95bd63fd0b166cd822dce7a219b"},"name":"com.unity.xr.arfoundation","version":"1.1.0-preview.6","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arextensions":"1.0.0-preview.7","com.unity.xr.facesubsystem":"1.0.0-preview.5","com.unity.xr.legacyinputhelpers":"1.0.0"},"dist":{"shasum":"d26b284ca849c7436613da7ae625eec6f153d709","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.1.0-preview.6.tgz"}},"1.0.0-preview.22":{"_id":"com.unity.xr.arfoundation@1.0.0-preview.22","unity":"2018.3","name":"com.unity.xr.arfoundation","version":"1.0.0-preview.22","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling \n Face tracking","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arextensions":"1.0.0-preview.7","com.unity.xr.facesubsystem":"1.0.0-preview.5"},"dist":{"shasum":"962545e3b4a38028e8b47b7aa0d7d9b38d3d65e2","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.0.0-preview.22.tgz"}},"1.0.0-preview.20":{"_id":"com.unity.xr.arfoundation@1.0.0-preview.20","unity":"2018.1","name":"com.unity.xr.arfoundation","version":"1.0.0-preview.20","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arextensions":"1.0.0-preview.6"},"dist":{"shasum":"c51787208426e042ba1ee996760f4d19d06038c0","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.0.0-preview.20.tgz"}},"1.0.0-preview.19":{"_id":"com.unity.xr.arfoundation@1.0.0-preview.19","unity":"2018.1","name":"com.unity.xr.arfoundation","version":"1.0.0-preview.19","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arextensions":"1.0.0-preview.5"},"dist":{"shasum":"1fbc509d8939df5081754a7cc4746861f134dfdb","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.0.0-preview.19.tgz"}},"1.0.0-preview.18":{"_id":"com.unity.xr.arfoundation@1.0.0-preview.18","unity":"2018.1","name":"com.unity.xr.arfoundation","version":"1.0.0-preview.18","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arextensions":"1.0.0-preview.4"},"dist":{"shasum":"6f2fbf0a163834ba3223c06ab44cc7615c14d63f","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.0.0-preview.18.tgz"}},"1.0.0-preview.17":{"_id":"com.unity.xr.arfoundation@1.0.0-preview.17","unity":"2018.1","name":"com.unity.xr.arfoundation","version":"1.0.0-preview.17","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arextensions":"1.0.0-preview.4"},"dist":{"shasum":"5bad3f1a5d7132d84817aff2bec48875bc0a1946","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.0.0-preview.17.tgz"}},"1.0.0-preview.14":{"_id":"com.unity.xr.arfoundation@1.0.0-preview.14","unity":"2018.1","name":"com.unity.xr.arfoundation","version":"1.0.0-preview.14","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arextensions":"1.0.0-preview.4"},"dist":{"shasum":"b35a69518a61b562c8877d5780572044e9cae2ed","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.0.0-preview.14.tgz"}},"1.0.0-preview.13":{"_id":"com.unity.xr.arfoundation@1.0.0-preview.13","unity":"2018.1","name":"com.unity.xr.arfoundation","version":"1.0.0-preview.13","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arextensions":"1.0.0-preview.4"},"dist":{"shasum":"b8ee015ef5d37ea60fec1a8cabc8d66bbcc350d0","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.0.0-preview.13.tgz"}},"1.0.0-preview.12":{"_id":"com.unity.xr.arfoundation@1.0.0-preview.12","unity":"2018.1","name":"com.unity.xr.arfoundation","version":"1.0.0-preview.12","displayName":"AR Foundation","description":"A collection of MonoBehaviours and C# utilities for working with AR Subsystems. \n\nIncludes: \n GameObject menu items for creating an AR setup \n MonoBehaviours that control AR session lifecycle and create GameObjects from detected, real-world trackable features \n Scale handling","keywords":["xr","ar","augmented","reality","utility","utilities","foundation","core"],"dependencies":{"com.unity.xr.arextensions":"1.0.0-preview.4"},"dist":{"shasum":"0c97819b29f8537801a341bff6d1304a6e5ef40a","tarball":"https://download.packages.unity.com/com.unity.xr.arfoundation/-/com.unity.xr.arfoundation-1.0.0-preview.12.tgz"}}},"time":{"6.1.0":"2025-02-22T02:41:46.557Z","5.1.6":"2025-02-13T10:39:39.889Z","6.1.0-pre.5":"2025-01-27T22:42:22.909Z","6.0.5":"2025-01-25T00:52:07.197Z","6.1.0-pre.4":"2024-12-27T07:00:58.962Z","6.0.4":"2024-12-05T11:55:05.452Z","6.1.0-pre.3":"2024-11-15T02:30:48.895Z","6.1.0-pre.2":"2024-10-17T08:47:52.799Z","6.1.0-pre.1":"2024-09-13T20:46:26.812Z","6.0.3":"2024-08-19T21:04:33.000Z","5.1.5":"2024-06-25T10:05:32.000Z","6.0.2":"2024-06-03T12:01:30.000Z","5.1.4":"2024-05-02T09:10:55.000Z","6.0.1":"2024-04-03T07:48:53.000Z","5.1.3":"2024-03-26T13:38:32.000Z","6.0.0-pre.8":"2024-03-25T15:19:56.000Z","6.0.0-pre.7":"2024-03-12T23:12:21.000Z","6.0.0-pre.6":"2024-02-14T22:21:58.000Z","5.1.2":"2024-01-29T09:12:37.000Z","4.2.10":"2024-01-23T10:42:54.000Z","6.0.0-pre.5":"2023-12-19T00:35:02.000Z","5.1.1":"2023-11-24T10:01:36.000Z","6.0.0-pre.4":"2023-11-01T12:52:55.000Z","4.2.9":"2023-10-23T14:17:38.000Z","5.1.0":"2023-09-21T12:49:39.000Z","6.0.0-pre.3":"2023-09-15T09:30:58.000Z","5.0.7":"2023-07-26T19:20:27.000Z","5.1.0-pre.10":"2023-07-26T00:06:00.000Z","5.1.0-pre.9":"2023-07-14T02:38:35.000Z","5.1.0-pre.8":"2023-06-15T21:43:34.000Z","5.1.0-pre.6":"2023-05-25T21:27:13.000Z","4.2.8":"2023-05-22T13:33:58.000Z","5.0.6":"2023-05-22T08:56:57.000Z","5.1.0-pre.4":"2023-04-22T00:25:03.000Z","5.0.5":"2023-03-14T08:27:26.000Z","5.0.4":"2023-03-02T14:45:17.000Z","5.1.0-pre.3":"2023-02-10T21:36:41.000Z","5.0.3":"2022-11-15T10:56:09.000Z","5.1.0-pre.2":"2022-11-08T07:36:15.000Z","4.2.7":"2022-11-07T15:50:25.000Z","4.1.13":"2022-11-07T10:35:46.000Z","5.1.0-pre.1":"2022-10-28T09:18:03.000Z","5.0.2":"2022-09-12T19:39:46.000Z","4.2.6":"2022-09-12T19:39:40.000Z","4.1.12":"2022-09-12T19:39:19.000Z","5.0.0-pre.13":"2022-08-01T23:48:46.000Z","5.0.0-pre.12":"2022-05-24T20:35:30.000Z","4.1.10":"2022-05-02T18:11:04.000Z","4.2.3":"2022-05-02T18:08:55.000Z","5.0.0-pre.9":"2022-04-18T21:39:21.000Z","5.0.0-pre.8":"2022-02-11T01:23:11.000Z","4.1.9":"2022-01-18T19:11:45.000Z","2.1.19":"2022-01-07T10:04:29.000Z","4.2.2":"2022-01-07T09:34:25.000Z","5.0.0-pre.7":"2022-01-04T23:21:10.000Z","5.0.0-pre.6":"2021-11-20T00:37:10.000Z","5.0.0-pre.5":"2021-11-01T13:12:39.000Z","4.2.1":"2021-10-12T16:38:53.000Z","4.2.0":"2021-09-01T16:51:18.000Z","4.2.0-pre.12":"2021-07-22T22:19:15.000Z","4.2.0-pre.10":"2021-06-29T20:52:24.000Z","4.2.0-pre.9":"2021-06-08T16:10:45.000Z","4.2.0-pre.8":"2021-05-22T00:20:11.000Z","4.2.0-pre.7":"2021-05-14T19:43:04.000Z","4.2.0-pre.5":"2021-04-09T21:38:55.000Z","4.1.7":"2021-04-08T18:29:36.000Z","2.1.18":"2021-04-07T19:33:51.000Z","4.2.0-pre.4":"2021-03-20T00:23:20.000Z","4.2.0-pre.3":"2021-03-16T18:02:22.000Z","4.2.0-pre.2":"2021-03-09T19:26:37.000Z","2.1.16":"2021-02-11T20:21:16.000Z","4.1.5":"2021-02-11T19:32:03.000Z","4.0.12":"2021-02-11T19:06:15.000Z","4.1.3":"2021-01-21T23:29:34.000Z","4.0.10":"2021-01-21T22:54:00.000Z","3.1.10":"2021-01-21T18:26:08.000Z","2.1.14":"2021-01-15T20:44:15.000Z","4.1.1":"2020-11-17T18:16:27.000Z","4.1.0-preview.13":"2020-11-09T21:25:56.000Z","4.1.0-preview.12":"2020-11-03T02:36:45.000Z","4.1.0-preview.11":"2020-10-23T04:27:26.000Z","2.1.10":"2020-10-20T14:23:03.000Z","3.1.6":"2020-10-20T14:11:53.000Z","4.0.9":"2020-10-15T20:11:06.000Z","4.1.0-preview.10":"2020-10-13T03:40:09.000Z","4.1.0-preview.9":"2020-09-26T00:09:05.000Z","3.1.5":"2020-09-14T17:10:00.000Z","4.0.8":"2020-09-02T20:08:35.000Z","4.1.0-preview.7":"2020-08-27T04:52:28.000Z","4.1.0-preview.6":"2020-07-28T00:26:45.000Z","4.1.0-preview.5":"2020-07-17T00:04:55.000Z","4.1.0-preview.3":"2020-07-09T23:41:40.000Z","4.1.0-preview.2":"2020-06-25T04:35:19.000Z","4.1.0-preview.1":"2020-06-24T05:02:13.000Z","4.0.2":"2020-06-16T13:43:09.000Z","4.0.0-preview.3":"2020-05-06T00:57:30.000Z","3.1.3":"2020-04-23T18:23:16.000Z","2.1.8":"2020-04-16T17:51:37.000Z","4.0.0-preview.1":"2020-03-25T20:55:49.000Z","3.1.0-preview.8":"2020-03-12T22:49:31.000Z","3.1.0-preview.7":"2020-03-04T07:16:28.000Z","3.1.0-preview.6":"2020-02-27T02:28:50.000Z","3.1.0-preview.4":"2020-01-22T07:36:26.000Z","3.1.0-preview.3":"2020-01-02T20:05:43.000Z","3.0.1":"2019-12-03T00:07:33.000Z","3.1.0-preview.1":"2019-11-22T02:07:31.000Z","3.0.0-preview.6":"2019-11-16T01:05:54.000Z","1.5.0-preview.7":"2019-11-02T01:05:34.000Z","2.2.0-preview.6":"2019-10-24T21:05:45.000Z","3.0.0-preview.4":"2019-10-23T03:05:37.000Z","2.1.4":"2019-10-02T21:05:29.000Z","3.0.0-preview.3":"2019-09-28T00:05:13.000Z","3.0.0-preview.2":"2019-09-06T19:04:25.000Z","3.0.0-preview.1":"2019-08-29T01:04:37.000Z","2.1.3":"2019-08-07T18:04:25.000Z","2.1.1":"2019-07-19T01:03:57.000Z","2.2.0-preview.3":"2019-07-17T23:03:58.000Z","1.5.0-preview.6":"2019-07-17T23:03:54.000Z","1.5.0-preview.5":"2019-06-06T13:03:32.000Z","2.2.0-preview.2":"2019-06-06T13:03:28.000Z","2.1.0-preview.3":"2019-05-31T14:03:25.000Z","1.5.0-preview.2":"2019-05-15T18:02:59.000Z","2.1.0-preview.2":"2019-05-15T16:03:27.000Z","2.0.2":"2019-04-03T12:38:01.000Z","1.1.0-preview.6":"2019-04-03T12:37:57.000Z","1.0.0-preview.22":"2019-04-03T12:37:54.000Z","1.0.0-preview.20":"2019-04-03T12:37:51.000Z","1.0.0-preview.19":"2019-04-03T12:37:48.000Z","1.0.0-preview.18":"2019-04-03T12:37:44.000Z","1.0.0-preview.17":"2019-04-03T12:37:42.000Z","1.0.0-preview.14":"2019-04-03T12:37:39.000Z","1.0.0-preview.13":"2019-04-03T12:37:36.000Z","1.0.0-preview.12":"2019-04-03T12:37:33.000Z"},"dist-tags":{"latest":"6.1.0"},"etag":"\"5ab9b-w2/3G1DBKEL1oyfpFhhi1HD9tAg\""}